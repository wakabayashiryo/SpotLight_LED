

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Sun Sep 17 10:38:33 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	stringtext3,global,class=STRCODE,delta=2
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	cinit,global,class=CODE,merge=1,delta=2
    13                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 1.43
    37                           ; Generated 25/07/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC12F1822 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  010C                     	;# 
   111  0111                     	;# 
   112  0112                     	;# 
   113  0115                     	;# 
   114  0116                     	;# 
   115  0117                     	;# 
   116  0118                     	;# 
   117  0119                     	;# 
   118  011A                     	;# 
   119  011B                     	;# 
   120  011D                     	;# 
   121  011D                     	;# 
   122  018C                     	;# 
   123  0191                     	;# 
   124  0191                     	;# 
   125  0192                     	;# 
   126  0193                     	;# 
   127  0193                     	;# 
   128  0193                     	;# 
   129  0194                     	;# 
   130  0195                     	;# 
   131  0196                     	;# 
   132  0199                     	;# 
   133  019A                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019D                     	;# 
   141  019E                     	;# 
   142  019F                     	;# 
   143  020C                     	;# 
   144  0211                     	;# 
   145  0211                     	;# 
   146  0212                     	;# 
   147  0212                     	;# 
   148  0213                     	;# 
   149  0213                     	;# 
   150  0214                     	;# 
   151  0214                     	;# 
   152  0215                     	;# 
   153  0215                     	;# 
   154  0215                     	;# 
   155  0216                     	;# 
   156  0216                     	;# 
   157  0217                     	;# 
   158  0217                     	;# 
   159  0291                     	;# 
   160  0291                     	;# 
   161  0292                     	;# 
   162  0293                     	;# 
   163  0294                     	;# 
   164  0295                     	;# 
   165  0295                     	;# 
   166  0296                     	;# 
   167  0391                     	;# 
   168  0392                     	;# 
   169  0393                     	;# 
   170  039A                     	;# 
   171  039C                     	;# 
   172  039D                     	;# 
   173  039E                     	;# 
   174  039F                     	;# 
   175  0FE4                     	;# 
   176  0FE5                     	;# 
   177  0FE6                     	;# 
   178  0FE7                     	;# 
   179  0FE8                     	;# 
   180  0FE9                     	;# 
   181  0FEA                     	;# 
   182  0FEB                     	;# 
   183  0FED                     	;# 
   184  0FEE                     	;# 
   185  0FEF                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0008                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  0011                     	;# 
   200  0012                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  008C                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  010C                     	;# 
   227  0111                     	;# 
   228  0112                     	;# 
   229  0115                     	;# 
   230  0116                     	;# 
   231  0117                     	;# 
   232  0118                     	;# 
   233  0119                     	;# 
   234  011A                     	;# 
   235  011B                     	;# 
   236  011D                     	;# 
   237  011D                     	;# 
   238  018C                     	;# 
   239  0191                     	;# 
   240  0191                     	;# 
   241  0192                     	;# 
   242  0193                     	;# 
   243  0193                     	;# 
   244  0193                     	;# 
   245  0194                     	;# 
   246  0195                     	;# 
   247  0196                     	;# 
   248  0199                     	;# 
   249  019A                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019C                     	;# 
   255  019C                     	;# 
   256  019D                     	;# 
   257  019E                     	;# 
   258  019F                     	;# 
   259  020C                     	;# 
   260  0211                     	;# 
   261  0211                     	;# 
   262  0212                     	;# 
   263  0212                     	;# 
   264  0213                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0214                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  0291                     	;# 
   276  0291                     	;# 
   277  0292                     	;# 
   278  0293                     	;# 
   279  0294                     	;# 
   280  0295                     	;# 
   281  0295                     	;# 
   282  0296                     	;# 
   283  0391                     	;# 
   284  0392                     	;# 
   285  0393                     	;# 
   286  039A                     	;# 
   287  039C                     	;# 
   288  039D                     	;# 
   289  039E                     	;# 
   290  039F                     	;# 
   291  0FE4                     	;# 
   292  0FE5                     	;# 
   293  0FE6                     	;# 
   294  0FE7                     	;# 
   295  0FE8                     	;# 
   296  0FE9                     	;# 
   297  0FEA                     	;# 
   298  0FEB                     	;# 
   299  0FED                     	;# 
   300  0FEE                     	;# 
   301  0FEF                     	;# 
   302  0000                     	;# 
   303  0001                     	;# 
   304  0002                     	;# 
   305  0003                     	;# 
   306  0004                     	;# 
   307  0005                     	;# 
   308  0006                     	;# 
   309  0007                     	;# 
   310  0008                     	;# 
   311  0009                     	;# 
   312  000A                     	;# 
   313  000B                     	;# 
   314  000C                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  008C                     	;# 
   329  0091                     	;# 
   330  0092                     	;# 
   331  0095                     	;# 
   332  0096                     	;# 
   333  0097                     	;# 
   334  0098                     	;# 
   335  0099                     	;# 
   336  009A                     	;# 
   337  009B                     	;# 
   338  009B                     	;# 
   339  009C                     	;# 
   340  009D                     	;# 
   341  009E                     	;# 
   342  010C                     	;# 
   343  0111                     	;# 
   344  0112                     	;# 
   345  0115                     	;# 
   346  0116                     	;# 
   347  0117                     	;# 
   348  0118                     	;# 
   349  0119                     	;# 
   350  011A                     	;# 
   351  011B                     	;# 
   352  011D                     	;# 
   353  011D                     	;# 
   354  018C                     	;# 
   355  0191                     	;# 
   356  0191                     	;# 
   357  0192                     	;# 
   358  0193                     	;# 
   359  0193                     	;# 
   360  0193                     	;# 
   361  0194                     	;# 
   362  0195                     	;# 
   363  0196                     	;# 
   364  0199                     	;# 
   365  019A                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019B                     	;# 
   369  019B                     	;# 
   370  019C                     	;# 
   371  019C                     	;# 
   372  019D                     	;# 
   373  019E                     	;# 
   374  019F                     	;# 
   375  020C                     	;# 
   376  0211                     	;# 
   377  0211                     	;# 
   378  0212                     	;# 
   379  0212                     	;# 
   380  0213                     	;# 
   381  0213                     	;# 
   382  0214                     	;# 
   383  0214                     	;# 
   384  0215                     	;# 
   385  0215                     	;# 
   386  0215                     	;# 
   387  0216                     	;# 
   388  0216                     	;# 
   389  0217                     	;# 
   390  0217                     	;# 
   391  0291                     	;# 
   392  0291                     	;# 
   393  0292                     	;# 
   394  0293                     	;# 
   395  0294                     	;# 
   396  0295                     	;# 
   397  0295                     	;# 
   398  0296                     	;# 
   399  0391                     	;# 
   400  0392                     	;# 
   401  0393                     	;# 
   402  039A                     	;# 
   403  039C                     	;# 
   404  039D                     	;# 
   405  039E                     	;# 
   406  039F                     	;# 
   407  0FE4                     	;# 
   408  0FE5                     	;# 
   409  0FE6                     	;# 
   410  0FE7                     	;# 
   411  0FE8                     	;# 
   412  0FE9                     	;# 
   413  0FEA                     	;# 
   414  0FEB                     	;# 
   415  0FED                     	;# 
   416  0FEE                     	;# 
   417  0FEF                     	;# 
   418  0000                     	;# 
   419  0001                     	;# 
   420  0002                     	;# 
   421  0003                     	;# 
   422  0004                     	;# 
   423  0005                     	;# 
   424  0006                     	;# 
   425  0007                     	;# 
   426  0008                     	;# 
   427  0009                     	;# 
   428  000A                     	;# 
   429  000B                     	;# 
   430  000C                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0015                     	;# 
   434  0016                     	;# 
   435  0016                     	;# 
   436  0017                     	;# 
   437  0018                     	;# 
   438  0019                     	;# 
   439  001A                     	;# 
   440  001B                     	;# 
   441  001C                     	;# 
   442  001E                     	;# 
   443  001F                     	;# 
   444  008C                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009B                     	;# 
   455  009C                     	;# 
   456  009D                     	;# 
   457  009E                     	;# 
   458  010C                     	;# 
   459  0111                     	;# 
   460  0112                     	;# 
   461  0115                     	;# 
   462  0116                     	;# 
   463  0117                     	;# 
   464  0118                     	;# 
   465  0119                     	;# 
   466  011A                     	;# 
   467  011B                     	;# 
   468  011D                     	;# 
   469  011D                     	;# 
   470  018C                     	;# 
   471  0191                     	;# 
   472  0191                     	;# 
   473  0192                     	;# 
   474  0193                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0194                     	;# 
   478  0195                     	;# 
   479  0196                     	;# 
   480  0199                     	;# 
   481  019A                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019C                     	;# 
   487  019C                     	;# 
   488  019D                     	;# 
   489  019E                     	;# 
   490  019F                     	;# 
   491  020C                     	;# 
   492  0211                     	;# 
   493  0211                     	;# 
   494  0212                     	;# 
   495  0212                     	;# 
   496  0213                     	;# 
   497  0213                     	;# 
   498  0214                     	;# 
   499  0214                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0215                     	;# 
   503  0216                     	;# 
   504  0216                     	;# 
   505  0217                     	;# 
   506  0217                     	;# 
   507  0291                     	;# 
   508  0291                     	;# 
   509  0292                     	;# 
   510  0293                     	;# 
   511  0294                     	;# 
   512  0295                     	;# 
   513  0295                     	;# 
   514  0296                     	;# 
   515  0391                     	;# 
   516  0392                     	;# 
   517  0393                     	;# 
   518  039A                     	;# 
   519  039C                     	;# 
   520  039D                     	;# 
   521  039E                     	;# 
   522  039F                     	;# 
   523  0FE4                     	;# 
   524  0FE5                     	;# 
   525  0FE6                     	;# 
   526  0FE7                     	;# 
   527  0FE8                     	;# 
   528  0FE9                     	;# 
   529  0FEA                     	;# 
   530  0FEB                     	;# 
   531  0FED                     	;# 
   532  0FEE                     	;# 
   533  0FEF                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  0011                     	;# 
   548  0012                     	;# 
   549  0015                     	;# 
   550  0016                     	;# 
   551  0016                     	;# 
   552  0017                     	;# 
   553  0018                     	;# 
   554  0019                     	;# 
   555  001A                     	;# 
   556  001B                     	;# 
   557  001C                     	;# 
   558  001E                     	;# 
   559  001F                     	;# 
   560  008C                     	;# 
   561  0091                     	;# 
   562  0092                     	;# 
   563  0095                     	;# 
   564  0096                     	;# 
   565  0097                     	;# 
   566  0098                     	;# 
   567  0099                     	;# 
   568  009A                     	;# 
   569  009B                     	;# 
   570  009B                     	;# 
   571  009C                     	;# 
   572  009D                     	;# 
   573  009E                     	;# 
   574  010C                     	;# 
   575  0111                     	;# 
   576  0112                     	;# 
   577  0115                     	;# 
   578  0116                     	;# 
   579  0117                     	;# 
   580  0118                     	;# 
   581  0119                     	;# 
   582  011A                     	;# 
   583  011B                     	;# 
   584  011D                     	;# 
   585  011D                     	;# 
   586  018C                     	;# 
   587  0191                     	;# 
   588  0191                     	;# 
   589  0192                     	;# 
   590  0193                     	;# 
   591  0193                     	;# 
   592  0193                     	;# 
   593  0194                     	;# 
   594  0195                     	;# 
   595  0196                     	;# 
   596  0199                     	;# 
   597  019A                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019B                     	;# 
   601  019B                     	;# 
   602  019C                     	;# 
   603  019C                     	;# 
   604  019D                     	;# 
   605  019E                     	;# 
   606  019F                     	;# 
   607  020C                     	;# 
   608  0211                     	;# 
   609  0211                     	;# 
   610  0212                     	;# 
   611  0212                     	;# 
   612  0213                     	;# 
   613  0213                     	;# 
   614  0214                     	;# 
   615  0214                     	;# 
   616  0215                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0216                     	;# 
   620  0216                     	;# 
   621  0217                     	;# 
   622  0217                     	;# 
   623  0291                     	;# 
   624  0291                     	;# 
   625  0292                     	;# 
   626  0293                     	;# 
   627  0294                     	;# 
   628  0295                     	;# 
   629  0295                     	;# 
   630  0296                     	;# 
   631  0391                     	;# 
   632  0392                     	;# 
   633  0393                     	;# 
   634  039A                     	;# 
   635  039C                     	;# 
   636  039D                     	;# 
   637  039E                     	;# 
   638  039F                     	;# 
   639  0FE4                     	;# 
   640  0FE5                     	;# 
   641  0FE6                     	;# 
   642  0FE7                     	;# 
   643  0FE8                     	;# 
   644  0FE9                     	;# 
   645  0FEA                     	;# 
   646  0FEB                     	;# 
   647  0FED                     	;# 
   648  0FEE                     	;# 
   649  0FEF                     	;# 
   650                           
   651                           	psect	stringtext1
   652  028A                     __pstringtext1:	
   653  028A                     _baudtable:	
   654  028A  340A               	retlw	10
   655  028B  341A               	retlw	26
   656  028C  3404               	retlw	4
   657  028D  340D               	retlw	13
   658  028E  3440               	retlw	64
   659  028F  3403               	retlw	3
   660  0290  34CF               	retlw	207
   661  0291  3400               	retlw	0
   662  0292  34BF               	retlw	191
   663  0293  3400               	retlw	0
   664  0294  3467               	retlw	103
   665  0295  3400               	retlw	0
   666  0296  3422               	retlw	34
   667  0297  3400               	retlw	0
   668  0298  3410               	retlw	16
   669  0299  3400               	retlw	0
   670  029A                     __end_of_baudtable:	
   671                           
   672                           	psect	stringtext2
   673  02DB                     __pstringtext2:	
   674  02DB                     _dpowers:	
   675  02DB  3401               	retlw	1
   676  02DC  3400               	retlw	0
   677  02DD  340A               	retlw	10
   678  02DE  3400               	retlw	0
   679  02DF  3464               	retlw	100
   680  02E0  3400               	retlw	0
   681  02E1  34E8               	retlw	232
   682  02E2  3403               	retlw	3
   683  02E3  3410               	retlw	16
   684  02E4  3427               	retlw	39
   685  02E5                     __end_of_dpowers:	
   686                           
   687                           	psect	stringtext3
   688  02E5                     __pstringtext3:	
   689  02E5                     _Blightness:	
   690  02E5  3400               	retlw	0
   691  02E6  3400               	retlw	0
   692  02E7  34FF               	retlw	255
   693  02E8  3400               	retlw	0
   694  02E9  34FF               	retlw	255
   695  02EA  3401               	retlw	1
   696  02EB  34FF               	retlw	255
   697  02EC  3402               	retlw	2
   698  02ED  34FF               	retlw	255
   699  02EE  3403               	retlw	3
   700  02EF                     __end_of_Blightness:	
   701                           
   702                           	psect	nvBANK0
   703  0056                     __pnvBANK0:	
   704  0056                     _TMR0_ReloadTemp:	
   705  0056                     	ds	1
   706  0016                     _TMR1	set	22
   707  001F                     _CPSCON1	set	31
   708  001E                     _CPSCON0	set	30
   709  0019                     _T1GCON	set	25
   710  0018                     _T1CON	set	24
   711  001C                     _T2CON	set	28
   712  001A                     _TMR2	set	26
   713  001B                     _PR2	set	27
   714  0015                     _TMR0	set	21
   715  000C                     _PORTA	set	12
   716  008C                     _TXIF	set	140
   717  008D                     _RCIF	set	141
   718  005F                     _GIE	set	95
   719  005E                     _PEIE	set	94
   720  005D                     _TMR0IE	set	93
   721  005A                     _TMR0IF	set	90
   722  0095                     _OPTION_REG	set	149
   723  008C                     _TRISA	set	140
   724  0099                     _OSCCON	set	153
   725  048D                     _RCIE	set	1165
   726  011D                     _APFCON	set	285
   727  0865                     _LATA5	set	2149
   728  0199                     _RCREG	set	409
   729  019A                     _TXREG	set	410
   730  019C                     _SPBRGH	set	412
   731  019B                     _SPBRGL	set	411
   732  019D                     _RCSTA	set	413
   733  019E                     _TXSTA	set	414
   734  018C                     _ANSELA	set	396
   735  0CEC                     _CREN	set	3308
   736  0CE9                     _OERR	set	3305
   737  0CEF                     _SPEN	set	3311
   738  0CFB                     _BRG16	set	3323
   739  020C                     _WPUA	set	524
   740  0291                     _CCPR1L	set	657
   741  0293                     _CCP1CON	set	659
   742                           
   743                           	psect	stringtext4
   744  02A9                     __pstringtext4:	
   745  02A9                     STR_2:	
   746  02A9  3444               	retlw	68	;'D'
   747  02AA  3469               	retlw	105	;'i'
   748  02AB  3466               	retlw	102	;'f'
   749  02AC  3466               	retlw	102	;'f'
   750  02AD  343D               	retlw	61	;'='
   751  02AE  3425               	retlw	37	;'%'
   752  02AF  3430               	retlw	48	;'0'
   753  02B0  3430               	retlw	48	;'0'
   754  02B1  3430               	retlw	48	;'0'
   755  02B2  3430               	retlw	48	;'0'
   756  02B3  3430               	retlw	48	;'0'
   757  02B4  3435               	retlw	53	;'5'
   758  02B5  3464               	retlw	100	;'d'
   759  02B6  3400               	retlw	0
   760                           
   761                           	psect	stringtext5
   762  02C4                     __pstringtext5:	
   763  02C4                     STR_1:	
   764  02C4  3443               	retlw	67	;'C'
   765  02C5  3468               	retlw	104	;'h'
   766  02C6  3461               	retlw	97	;'a'
   767  02C7  346E               	retlw	110	;'n'
   768  02C8  346E               	retlw	110	;'n'
   769  02C9  3465               	retlw	101	;'e'
   770  02CA  346C               	retlw	108	;'l'
   771  02CB  343A               	retlw	58	;':'
   772  02CC  3425               	retlw	37	;'%'
   773  02CD  3464               	retlw	100	;'d'
   774  02CE  3420               	retlw	32	;' '
   775  02CF  3400               	retlw	0
   776                           
   777                           	psect	stringtext6
   778  02FA                     __pstringtext6:	
   779  02FA                     STR_3:	
   780  02FA  340A               	retlw	10
   781  02FB  3400               	retlw	0
   782                           
   783                           	psect	stringtext7
   784  0000                     __pstringtext7:	
   785                           
   786                           ; #config settings
   787  0000                     
   788                           	psect	cinit
   789  0024                     start_initialization:	
   790  0024                     __initialization:	
   791                           
   792                           ; Clear objects allocated to COMMON
   793  0024  01F0               	clrf	__pbssCOMMON& (0+127)
   794  0025  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   795  0026  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   796  0027  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   797  0028  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   798                           
   799                           ; Clear objects allocated to BANK0
   800  0029  3020               	movlw	low __pbssBANK0
   801  002A  0084               	movwf	4
   802  002B  3000               	movlw	high __pbssBANK0
   803  002C  0085               	movwf	5
   804  002D  3023               	movlw	35
   805  002E  22EF               	fcall	clear_ram0
   806  002F                     end_of_initialization:	
   807                           ;End of C runtime variable initialization code
   808                           
   809  002F                     __end_of__initialization:	
   810  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   811  0030  0020               	movlb	0
   812  0031  28AA               	ljmp	_main	;jump to C main() function
   813                           
   814                           	psect	bssCOMMON
   815  0070                     __pbssCOMMON:	
   816  0070                     mTouch_Scan@elements:	
   817  0070                     	ds	1
   818  0071                     _using_channel:	
   819  0071                     	ds	1
   820  0072                     _config_ptr:	
   821  0072                     	ds	1
   822  0073                     _UART_Buffer_outptr:	
   823  0073                     	ds	1
   824  0074                     _UART_Buffer_inptr:	
   825  0074                     	ds	1
   826                           
   827                           	psect	bssBANK0
   828  0020                     __pbssBANK0:	
   829  0020                     _UART_Buffer:	
   830  0020                     	ds	32
   831  0040                     Handler@Interval:	
   832  0040                     	ds	2
   833  0042                     _elements:	
   834  0042                     	ds	1
   835                           
   836                           	psect	clrtext
   837  02EF                     clear_ram0:	
   838                           ;	Called with FSR0 containing the base address, and
   839                           ;	WREG with the size to clear
   840                           
   841  02EF  0064               	clrwdt	;clear the watchdog before getting into this loop
   842  02F0                     clrloop0:	
   843  02F0  0180               	clrf	0	;clear RAM location pointed to by FSR
   844  02F1  3101               	addfsr 0,1
   845  02F2  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   846  02F3  2AF0               	goto	clrloop0	;have we reached the end yet?
   847  02F4  3400               	retlw	0	;all done for this memory range, return
   848                           
   849                           	psect	cstackCOMMON
   850  0075                     __pcstackCOMMON:	
   851  0075                     ?_Basic_Init:	
   852  0075                     ?_PWM_Init_Port:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0075                     ?_mTouch_Init_Port:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0075                     ?_UART_Init_Port:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0075                     ?_mTouch_Check:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0075                     ?_Timer0_CheckFlag:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0075                     ??_Timer0_CheckFlag:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0075                     ?_mTouch_Count1ms:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0075                     ??_mTouch_Count1ms:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0075                     ?_mTouch_Scan:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0075                     ??_mTouch_Scan:	
   880                           ; 1 bytes @ 0x0
   881                           
   882  0075                     ?_UART_Interrupt:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0075                     ??_UART_Interrupt:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0075                     ?_main:	
   889                           ; 1 bytes @ 0x0
   890                           
   891  0075                     ?_Handler:	
   892                           ; 1 bytes @ 0x0
   893                           
   894                           
   895                           ; 1 bytes @ 0x0
   896  0075                     	ds	1
   897  0076                     UART_Interrupt@dt:	
   898                           
   899                           ; 1 bytes @ 0x1
   900  0076                     	ds	1
   901  0077                     UART_Interrupt@x:	
   902  0077                     mTouch_Count1ms@elements:	
   903                           ; 1 bytes @ 0x2
   904                           
   905                           
   906                           ; 1 bytes @ 0x2
   907  0077                     	ds	2
   908  0079                     ??_Handler:	
   909                           
   910                           ; 1 bytes @ 0x4
   911  0079                     	ds	1
   912                           
   913                           	psect	cstackBANK0
   914  0043                     __pcstackBANK0:	
   915  0043                     ??_Basic_Init:	
   916  0043                     ?_Timer0_Init:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0043                     ??_PWM_Init_Port:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0043                     ?_mTouch_Init:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0043                     ??_mTouch_Init_Port:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0043                     ??_UART_Init_Port:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0043                     ??_mTouch_Check:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0043                     ?_PWM_SetDuty:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0043                     Timer0_Init@reload_val:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0043                     PWM_SetDuty@duty:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0043                     mTouch_Init@mTouch_PortInit:	
   944                           ; 2 bytes @ 0x0
   945                           
   946                           
   947                           ; 2 bytes @ 0x0
   948  0043                     	ds	1
   949  0044                     ??_Timer0_Init:	
   950  0044                     ?_PWM_Init:	
   951                           ; 1 bytes @ 0x1
   952                           
   953  0044                     ?_UART_Init:	
   954                           ; 1 bytes @ 0x1
   955                           
   956  0044                     UART_Init@UART_Init_PORT:	
   957                           ; 1 bytes @ 0x1
   958                           
   959  0044                     PWM_Init@PMW_Init_PORT:	
   960                           ; 2 bytes @ 0x1
   961                           
   962                           
   963                           ; 2 bytes @ 0x1
   964  0044                     	ds	1
   965  0045                     ??_PWM_SetDuty:	
   966  0045                     Timer0_Init@pre_val:	
   967                           ; 1 bytes @ 0x2
   968                           
   969  0045                     mTouch_Init@cps_config:	
   970                           ; 1 bytes @ 0x2
   971                           
   972                           
   973                           ; 1 bytes @ 0x2
   974  0045                     	ds	1
   975  0046                     UART_Init@brg:	
   976  0046                     PWM_Init@pre_val:	
   977                           ; 1 bytes @ 0x3
   978                           
   979  0046                     mTouch_Init@num_of_channel:	
   980                           ; 1 bytes @ 0x3
   981                           
   982                           
   983                           ; 1 bytes @ 0x3
   984  0046                     	ds	1
   985  0047                     ??_mTouch_Init:	
   986  0047                     ??_UART_Init:	
   987                           ; 1 bytes @ 0x4
   988                           
   989  0047                     PWM_Init@period:	
   990                           ; 1 bytes @ 0x4
   991                           
   992  0047                     PWM_SetDuty@RegTemp:	
   993                           ; 1 bytes @ 0x4
   994                           
   995                           
   996                           ; 1 bytes @ 0x4
   997  0047                     	ds	1
   998  0048                     ??_PWM_Init:	
   999                           
  1000                           ; 1 bytes @ 0x5
  1001  0048                     	ds	1
  1002  0049                     mTouch_Check@DifferValue:	
  1003                           
  1004                           ; 2 bytes @ 0x6
  1005  0049                     	ds	2
  1006  004B                     mTouch_Check@elements:	
  1007                           
  1008                           ; 1 bytes @ 0x8
  1009  004B                     	ds	1
  1010  004C                     ??_main:	
  1011                           
  1012                           ; 1 bytes @ 0x9
  1013  004C                     	ds	2
  1014  004E                     main@cps_conf:	
  1015                           
  1016                           ; 8 bytes @ 0xB
  1017  004E                     	ds	8
  1018                           
  1019                           	psect	maintext
  1020  00AA                     __pmaintext:	
  1021 ;;
  1022 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1023 ;;
  1024 ;; *************** function _main *****************
  1025 ;; Defined at:
  1026 ;;		line 21 in file "main.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  cps_conf        8   11[BANK0 ] struct .[1]
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : B1F/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1
  1040 ;;      Params:         0       0       0
  1041 ;;      Locals:         0       8       0
  1042 ;;      Temps:          0       2       0
  1043 ;;      Totals:         0      10       0
  1044 ;;Total ram usage:       10 bytes
  1045 ;; Hardware stack levels required when called:    4
  1046 ;; This function calls:
  1047 ;;		_Basic_Init
  1048 ;;		_PWM_Init
  1049 ;;		_PWM_SetDuty
  1050 ;;		_Timer0_Init
  1051 ;;		_UART_Init
  1052 ;;		_mTouch_Check
  1053 ;;		_mTouch_Init
  1054 ;; This function is called by:
  1055 ;;		Startup code after reset
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           
  1060                           ;psect for function _main
  1061  00AA                     _main:	
  1062                           
  1063                           ;main.c: 23: Basic_Init();
  1064                           
  1065                           ;incstack = 0
  1066                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1067  00AA  22B7               	fcall	_Basic_Init
  1068                           
  1069                           ;main.c: 25: LATA5 = 1;
  1070  00AB  0022               	movlb	2	; select bank2
  1071  00AC  168C               	bsf	12,5	;volatile
  1072                           
  1073                           ;main.c: 27: Timer0_Init(TMR0_PRESCALER64,125);
  1074  00AD  307D               	movlw	125
  1075  00AE  0020               	movlb	0	; select bank0
  1076  00AF  00CC               	movwf	??_main
  1077  00B0  084C               	movf	??_main,w
  1078  00B1  00C3               	movwf	Timer0_Init@reload_val
  1079  00B2  3005               	movlw	5
  1080  00B3  21F2               	fcall	_Timer0_Init
  1081                           
  1082                           ;main.c: 29: PWM_Init(PWM_Init_Port,TMR2_PRESCALER4,0xFF);
  1083  00B4  3077               	movlw	low _PWM_Init_Port
  1084  00B5  0020               	movlb	0	; select bank0
  1085  00B6  00C4               	movwf	PWM_Init@PMW_Init_PORT
  1086  00B7  3002               	movlw	high _PWM_Init_Port
  1087  00B8  00C5               	movwf	PWM_Init@PMW_Init_PORT+1
  1088  00B9  01C6               	clrf	PWM_Init@pre_val
  1089  00BA  0AC6               	incf	PWM_Init@pre_val,f
  1090  00BB  30FF               	movlw	255
  1091  00BC  00CC               	movwf	??_main
  1092  00BD  084C               	movf	??_main,w
  1093  00BE  00C7               	movwf	PWM_Init@period
  1094  00BF  2260               	fcall	_PWM_Init
  1095                           
  1096                           ;main.c: 30: CCP1CON |= (3<<2);;
  1097  00C0  300C               	movlw	12
  1098  00C1  0020               	movlb	0	; select bank0
  1099  00C2  00CC               	movwf	??_main
  1100  00C3  084C               	movf	??_main,w
  1101  00C4  0025               	movlb	5	; select bank5
  1102  00C5  0493               	iorwf	19,f	;volatile
  1103                           
  1104                           ;main.c: 32: CPS_CHANNELCONFIG cps_conf[1];
  1105                           ;main.c: 33: cps_conf[0].CPS_Channel = 0;
  1106  00C6  0020               	movlb	0	; select bank0
  1107  00C7  01CE               	clrf	main@cps_conf
  1108                           
  1109                           ;main.c: 34: cps_conf[0].Threshould_Diff = 1000;
  1110  00C8  30E8               	movlw	232
  1111  00C9  00CF               	movwf	main@cps_conf+1
  1112  00CA  3003               	movlw	3
  1113  00CB  00D0               	movwf	main@cps_conf+2
  1114                           
  1115                           ;main.c: 35: mTouch_Init(mTouch_Init_Port,cps_conf,1);
  1116  00CC  30F5               	movlw	low _mTouch_Init_Port
  1117  00CD  00C3               	movwf	mTouch_Init@mTouch_PortInit
  1118  00CE  3002               	movlw	high _mTouch_Init_Port
  1119  00CF  00C4               	movwf	mTouch_Init@mTouch_PortInit+1
  1120  00D0  304E               	movlw	(low (main@cps_conf| 0))& (0+255)
  1121  00D1  00CC               	movwf	??_main
  1122  00D2  084C               	movf	??_main,w
  1123  00D3  00C5               	movwf	mTouch_Init@cps_config
  1124  00D4  01C6               	clrf	mTouch_Init@num_of_channel
  1125  00D5  0AC6               	incf	mTouch_Init@num_of_channel,f
  1126  00D6  21CA               	fcall	_mTouch_Init
  1127                           
  1128                           ;main.c: 37: UART_Init(UART_Init_Port,BAUD_9600);
  1129  00D7  309A               	movlw	low _UART_Init_Port
  1130  00D8  0020               	movlb	0	; select bank0
  1131  00D9  00C4               	movwf	UART_Init@UART_Init_PORT
  1132  00DA  3002               	movlw	high _UART_Init_Port
  1133  00DB  00C5               	movwf	UART_Init@UART_Init_PORT+1
  1134  00DC  3003               	movlw	3
  1135  00DD  00CC               	movwf	??_main
  1136  00DE  084C               	movf	??_main,w
  1137  00DF  00C6               	movwf	UART_Init@brg
  1138  00E0  2166               	fcall	_UART_Init
  1139                           
  1140                           ;main.c: 39: _delay((unsigned long)((100)*(32000000/4000.0)));
  1141  00E1  3005               	movlw	5
  1142  00E2  0020               	movlb	0	; select bank0
  1143  00E3  00CD               	movwf	??_main+1
  1144  00E4  300F               	movlw	15
  1145  00E5  00CC               	movwf	??_main
  1146  00E6  30F1               	movlw	241
  1147  00E7                     u1197:	
  1148  00E7  0B89               	decfsz	9,f
  1149  00E8  28E7               	goto	u1197
  1150  00E9  0BCC               	decfsz	??_main,f
  1151  00EA  28E7               	goto	u1197
  1152  00EB  0BCD               	decfsz	??_main+1,f
  1153  00EC  28E7               	goto	u1197
  1154  00ED                     l1575:	
  1155                           ;main.c: 41: while(1)
  1156                           
  1157                           
  1158                           ;main.c: 42: {
  1159                           ;main.c: 43: if(mTouch_Check(0))
  1160  00ED  3000               	movlw	0
  1161  00EE  2032               	fcall	_mTouch_Check
  1162  00EF  3A00               	xorlw	0
  1163  00F0  1903               	skipnz
  1164  00F1  28ED               	goto	l1575
  1165                           
  1166                           ;main.c: 44: {
  1167                           ;main.c: 45: if(++elements>4)
  1168  00F2  3001               	movlw	1
  1169  00F3  0020               	movlb	0	; select bank0
  1170  00F4  00CC               	movwf	??_main
  1171  00F5  084C               	movf	??_main,w
  1172  00F6  07C2               	addwf	_elements,f
  1173  00F7  3005               	movlw	5
  1174  00F8  0242               	subwf	_elements,w
  1175  00F9  1C03               	skipc
  1176  00FA  2900               	goto	l57
  1177                           
  1178                           ;main.c: 46: {
  1179                           ;main.c: 47: LATA5 = 1;
  1180  00FB  0022               	movlb	2	; select bank2
  1181  00FC  168C               	bsf	12,5	;volatile
  1182                           
  1183                           ;main.c: 48: elements = 0;
  1184  00FD  0020               	movlb	0	; select bank0
  1185  00FE  01C2               	clrf	_elements
  1186                           
  1187                           ;main.c: 49: }
  1188  00FF  2902               	goto	l1583
  1189  0100                     l57:	
  1190                           
  1191                           ;main.c: 50: else
  1192                           ;main.c: 51: {
  1193                           ;main.c: 52: LATA5 = 0;
  1194  0100  0022               	movlb	2	; select bank2
  1195  0101  128C               	bcf	12,5	;volatile
  1196  0102                     l1583:	
  1197                           
  1198                           ;main.c: 53: }
  1199                           ;main.c: 54: PWM_SetDuty(Blightness[elements]);
  1200  0102  0020               	movlb	0	; select bank0
  1201  0103  0842               	movf	_elements,w
  1202  0104  00CC               	movwf	??_main
  1203  0105  01CD               	clrf	??_main+1
  1204  0106  35CC               	lslf	??_main,f
  1205  0107  0DCD               	rlf	??_main+1,f
  1206  0108  30E5               	movlw	low (_Blightness| (0+32768))
  1207  0109  074C               	addwf	??_main,w
  1208  010A  0084               	movwf	4
  1209  010B  3082               	movlw	high (_Blightness| (0+32768))
  1210  010C  3D4D               	addwfc	??_main+1,w
  1211  010D  0085               	movwf	5
  1212  010E  3F00               	moviw [0]fsr0
  1213  010F  00C3               	movwf	PWM_SetDuty@duty
  1214  0110  3F01               	moviw [1]fsr0
  1215  0111  00C4               	movwf	PWM_SetDuty@duty+1
  1216  0112  2240               	fcall	_PWM_SetDuty
  1217  0113  28ED               	goto	l1575
  1218  0114                     __end_of_main:	
  1219                           
  1220                           	psect	text1
  1221  01CA                     __ptext1:	
  1222 ;; *************** function _mTouch_Init *****************
  1223 ;; Defined at:
  1224 ;;		line 6 in file "PIC_mTouch.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  mTouch_PortI    2    0[BANK0 ] PTR FTN()void 
  1227 ;;		 -> mTouch_Init_Port(1), 
  1228 ;;  cps_config      1    2[BANK0 ] PTR struct .
  1229 ;;		 -> main@cps_conf(8), 
  1230 ;;  num_of_chann    1    3[BANK0 ] unsigned char 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1
  1242 ;;      Params:         0       4       0
  1243 ;;      Locals:         0       0       0
  1244 ;;      Temps:          0       1       0
  1245 ;;      Totals:         0       5       0
  1246 ;;Total ram usage:        5 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    3
  1249 ;; This function calls:
  1250 ;;		_mTouch_Init_Port
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           
  1257                           ;psect for function _mTouch_Init
  1258  01CA                     _mTouch_Init:	
  1259                           
  1260                           ;PIC_mTouch.c: 8: mTouch_PortInit();
  1261                           
  1262                           ;incstack = 0
  1263                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  1264  01CA  0020               	movlb	0	; select bank0
  1265  01CB  0844               	movf	mTouch_Init@mTouch_PortInit+1,w
  1266  01CC  008A               	movwf	10
  1267  01CD  0843               	movf	mTouch_Init@mTouch_PortInit,w
  1268  01CE  000A               	callw
  1269  01CF  3181               	pagesel	$
  1270                           
  1271                           ;PIC_mTouch.c: 10: config_ptr = cps_config;
  1272  01D0  0020               	movlb	0	; select bank0
  1273  01D1  0845               	movf	mTouch_Init@cps_config,w
  1274  01D2  00C7               	movwf	??_mTouch_Init
  1275  01D3  0847               	movf	??_mTouch_Init,w
  1276  01D4  00F2               	movwf	_config_ptr
  1277                           
  1278                           ;PIC_mTouch.c: 11: using_channel = num_of_channel;
  1279  01D5  0846               	movf	mTouch_Init@num_of_channel,w
  1280  01D6  00C7               	movwf	??_mTouch_Init
  1281  01D7  0847               	movf	??_mTouch_Init,w
  1282  01D8  00F1               	movwf	_using_channel
  1283                           
  1284                           ;PIC_mTouch.c: 14: T1CON |= (0x01<<2);
  1285  01D9  1518               	bsf	24,2	;volatile
  1286                           
  1287                           ;PIC_mTouch.c: 15: T1CON &= ~(0x01<<3);
  1288  01DA  30F7               	movlw	247
  1289  01DB  00C7               	movwf	??_mTouch_Init
  1290  01DC  0847               	movf	??_mTouch_Init,w
  1291  01DD  0598               	andwf	24,f	;volatile
  1292                           
  1293                           ;PIC_mTouch.c: 16: T1CON |= (0x00<<4);
  1294  01DE  0818               	movf	24,w	;volatile
  1295                           
  1296                           ;PIC_mTouch.c: 17: T1CON |= (0x03<<6);
  1297  01DF  30C0               	movlw	192
  1298  01E0  00C7               	movwf	??_mTouch_Init
  1299  01E1  0847               	movf	??_mTouch_Init,w
  1300  01E2  0498               	iorwf	24,f	;volatile
  1301                           
  1302                           ;PIC_mTouch.c: 19: T1GCON = 0x00;
  1303  01E3  0199               	clrf	25	;volatile
  1304                           
  1305                           ;PIC_mTouch.c: 21: TMR1 = 0x0000;
  1306  01E4  0196               	clrf	22	;volatile
  1307  01E5  0197               	clrf	23	;volatile
  1308                           
  1309                           ;PIC_mTouch.c: 24: CPSCON0 |= (0x03<<2);
  1310  01E6  300C               	movlw	12
  1311  01E7  00C7               	movwf	??_mTouch_Init
  1312  01E8  0847               	movf	??_mTouch_Init,w
  1313  01E9  049E               	iorwf	30,f	;volatile
  1314                           
  1315                           ;PIC_mTouch.c: 25: CPSCON0 |= (0x00<<6);
  1316  01EA  081E               	movf	30,w	;volatile
  1317                           
  1318                           ;PIC_mTouch.c: 26: CPSCON0 &= ~(0x01<<7);;
  1319  01EB  307F               	movlw	127
  1320  01EC  00C7               	movwf	??_mTouch_Init
  1321  01ED  0847               	movf	??_mTouch_Init,w
  1322  01EE  059E               	andwf	30,f	;volatile
  1323                           
  1324                           ;PIC_mTouch.c: 27: CPSCON1 = (uint8_t)0x00;
  1325  01EF  019F               	clrf	31	;volatile
  1326                           
  1327                           ;PIC_mTouch.c: 29: T1CON |= (0x01<<0);
  1328  01F0  1418               	bsf	24,0	;volatile
  1329  01F1  0008               	return
  1330  01F2                     __end_of_mTouch_Init:	
  1331                           
  1332                           	psect	text2
  1333  02F5                     __ptext2:	
  1334 ;; *************** function _mTouch_Init_Port *****************
  1335 ;; Defined at:
  1336 ;;		line 118 in file "main.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;		None
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;		None
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  1    wreg      void 
  1343 ;; Registers used:
  1344 ;;		None
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMMON   BANK0   BANK1
  1350 ;;      Params:         0       0       0
  1351 ;;      Locals:         0       0       0
  1352 ;;      Temps:          0       0       0
  1353 ;;      Totals:         0       0       0
  1354 ;;Total ram usage:        0 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    2
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_main
  1361 ;;		_mTouch_Init
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _mTouch_Init_Port
  1367  02F5                     _mTouch_Init_Port:	
  1368                           
  1369                           ;main.c: 120: TRISA |= (1<<0);
  1370                           
  1371                           ;incstack = 0
  1372                           ; Regs used in _mTouch_Init_Port: []
  1373  02F5  0021               	movlb	1	; select bank1
  1374  02F6  140C               	bsf	12,0	;volatile
  1375                           
  1376                           ;main.c: 121: ANSELA |= (1<<0);
  1377  02F7  0023               	movlb	3	; select bank3
  1378  02F8  140C               	bsf	12,0	;volatile
  1379  02F9  0008               	return
  1380  02FA                     __end_of_mTouch_Init_Port:	
  1381                           
  1382                           	psect	text3
  1383  0032                     __ptext3:	
  1384 ;; *************** function _mTouch_Check *****************
  1385 ;; Defined at:
  1386 ;;		line 60 in file "PIC_mTouch.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;  elements        1    wreg     unsigned char 
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;  elements        1    8[BANK0 ] unsigned char 
  1391 ;;  DifferValue     2    6[BANK0 ] int 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      unsigned char 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1
  1401 ;;      Params:         0       0       0
  1402 ;;      Locals:         0       3       0
  1403 ;;      Temps:          0       6       0
  1404 ;;      Totals:         0       9       0
  1405 ;;Total ram usage:        9 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    2
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _mTouch_Check
  1417  0032                     _mTouch_Check:	
  1418                           
  1419                           ;incstack = 0
  1420                           ; Regs used in _mTouch_Check: [wreg-fsr1h+status,2+status,0]
  1421                           ;mTouch_Check@elements stored from wreg
  1422  0032  0020               	movlb	0	; select bank0
  1423  0033  00CB               	movwf	mTouch_Check@elements
  1424                           
  1425                           ;PIC_mTouch.c: 62: if(using_channel<=elements)return 0;
  1426  0034  0871               	movf	_using_channel,w
  1427  0035  024B               	subwf	mTouch_Check@elements,w
  1428  0036  1C03               	skipc
  1429  0037  283A               	goto	l1537
  1430  0038  3000               	movlw	0
  1431  0039  0008               	return
  1432  003A                     l1537:	
  1433                           
  1434                           ;PIC_mTouch.c: 64: int16_t DifferValue = (int16_t)(config_ptr[elements].CPS_PreData-conf
      +                          ig_ptr[elements].CPS_Data);
  1435  003A  084B               	movf	mTouch_Check@elements,w
  1436  003B  00C3               	movwf	??_mTouch_Check
  1437  003C  3002               	movlw	2
  1438  003D                     u1095:	
  1439  003D  35C3               	lslf	??_mTouch_Check,f
  1440  003E  3EFF               	addlw	-1
  1441  003F  1D03               	skipz
  1442  0040  283D               	goto	u1095
  1443  0041  3543               	lslf	??_mTouch_Check,w
  1444  0042  0772               	addwf	_config_ptr,w
  1445  0043  00C4               	movwf	??_mTouch_Check+1
  1446  0044  0844               	movf	??_mTouch_Check+1,w
  1447  0045  3E05               	addlw	5
  1448  0046  0086               	movwf	6
  1449  0047  0187               	clrf	7
  1450  0048  084B               	movf	mTouch_Check@elements,w
  1451  0049  00C5               	movwf	??_mTouch_Check+2
  1452  004A  3002               	movlw	2
  1453  004B                     u1105:	
  1454  004B  35C5               	lslf	??_mTouch_Check+2,f
  1455  004C  3EFF               	addlw	-1
  1456  004D  1D03               	skipz
  1457  004E  284B               	goto	u1105
  1458  004F  3545               	lslf	??_mTouch_Check+2,w
  1459  0050  0772               	addwf	_config_ptr,w
  1460  0051  00C6               	movwf	??_mTouch_Check+3
  1461  0052  0846               	movf	??_mTouch_Check+3,w
  1462  0053  3E03               	addlw	3
  1463  0054  0084               	movwf	4
  1464  0055  0185               	clrf	5
  1465  0056  3F00               	moviw [0]fsr0
  1466  0057  00C7               	movwf	??_mTouch_Check+4
  1467  0058  3F01               	moviw [1]fsr0
  1468  0059  00C8               	movwf	??_mTouch_Check+5
  1469  005A  09C7               	comf	??_mTouch_Check+4,f
  1470  005B  09C8               	comf	??_mTouch_Check+5,f
  1471  005C  0AC7               	incf	??_mTouch_Check+4,f
  1472  005D  1903               	skipnz
  1473  005E  0AC8               	incf	??_mTouch_Check+5,f
  1474  005F  3F40               	moviw [0]fsr1
  1475  0060  0747               	addwf	??_mTouch_Check+4,w
  1476  0061  00C9               	movwf	mTouch_Check@DifferValue
  1477  0062  3F41               	moviw [1]fsr1
  1478  0063  3D48               	addwfc	??_mTouch_Check+5,w
  1479  0064  00CA               	movwf	mTouch_Check@DifferValue+1
  1480                           
  1481                           ;PIC_mTouch.c: 66: if((DifferValue>config_ptr[elements].Threshould_Diff)&&!config_ptr[el
      +                          ements].Check_Interval)
  1482  0065  084B               	movf	mTouch_Check@elements,w
  1483  0066  00C3               	movwf	??_mTouch_Check
  1484  0067  3002               	movlw	2
  1485  0068                     u1115:	
  1486  0068  35C3               	lslf	??_mTouch_Check,f
  1487  0069  3EFF               	addlw	-1
  1488  006A  1D03               	skipz
  1489  006B  2868               	goto	u1115
  1490  006C  3543               	lslf	??_mTouch_Check,w
  1491  006D  0772               	addwf	_config_ptr,w
  1492  006E  00C4               	movwf	??_mTouch_Check+1
  1493  006F  0A44               	incf	??_mTouch_Check+1,w
  1494  0070  0086               	movwf	6
  1495  0071  0187               	clrf	7
  1496  0072  3F40               	moviw [0]fsr1
  1497  0073  00C5               	movwf	??_mTouch_Check+2
  1498  0074  3F41               	moviw [1]fsr1
  1499  0075  00C6               	movwf	??_mTouch_Check+3
  1500  0076  0846               	movf	??_mTouch_Check+3,w
  1501  0077  3A80               	xorlw	128
  1502  0078  00C7               	movwf	??_mTouch_Check+4
  1503  0079  084A               	movf	mTouch_Check@DifferValue+1,w
  1504  007A  3A80               	xorlw	128
  1505  007B  0247               	subwf	??_mTouch_Check+4,w
  1506  007C  1D03               	skipz
  1507  007D  2880               	goto	u1125
  1508  007E  0849               	movf	mTouch_Check@DifferValue,w
  1509  007F  0245               	subwf	??_mTouch_Check+2,w
  1510  0080                     u1125:	
  1511  0080  1803               	skipnc
  1512  0081  28A8               	goto	l1549
  1513  0082  0020               	movlb	0	; select bank0
  1514  0083  084B               	movf	mTouch_Check@elements,w
  1515  0084  00C3               	movwf	??_mTouch_Check
  1516  0085  3002               	movlw	2
  1517  0086                     u1135:	
  1518  0086  35C3               	lslf	??_mTouch_Check,f
  1519  0087  3EFF               	addlw	-1
  1520  0088  1D03               	skipz
  1521  0089  2886               	goto	u1135
  1522  008A  3543               	lslf	??_mTouch_Check,w
  1523  008B  0772               	addwf	_config_ptr,w
  1524  008C  00C4               	movwf	??_mTouch_Check+1
  1525  008D  0844               	movf	??_mTouch_Check+1,w
  1526  008E  3E07               	addlw	7
  1527  008F  0086               	movwf	6
  1528  0090  0187               	clrf	7
  1529  0091  0801               	movf	1,w
  1530  0092  1D03               	btfss	3,2
  1531  0093  28A8               	goto	l1549
  1532                           
  1533                           ;PIC_mTouch.c: 67: {
  1534                           ;PIC_mTouch.c: 68: config_ptr[elements].Check_Interval = 100;
  1535  0094  3064               	movlw	100
  1536  0095  00C3               	movwf	??_mTouch_Check
  1537  0096  084B               	movf	mTouch_Check@elements,w
  1538  0097  00C4               	movwf	??_mTouch_Check+1
  1539  0098  3002               	movlw	2
  1540  0099                     u1155:	
  1541  0099  35C4               	lslf	??_mTouch_Check+1,f
  1542  009A  3EFF               	addlw	-1
  1543  009B  1D03               	skipz
  1544  009C  2899               	goto	u1155
  1545  009D  3544               	lslf	??_mTouch_Check+1,w
  1546  009E  0772               	addwf	_config_ptr,w
  1547  009F  00C5               	movwf	??_mTouch_Check+2
  1548  00A0  0845               	movf	??_mTouch_Check+2,w
  1549  00A1  3E07               	addlw	7
  1550  00A2  0086               	movwf	6
  1551  00A3  0187               	clrf	7
  1552  00A4  0843               	movf	??_mTouch_Check,w
  1553  00A5  0081               	movwf	1
  1554                           
  1555                           ;PIC_mTouch.c: 69: return 1;
  1556  00A6  3001               	movlw	1
  1557  00A7  0008               	return
  1558  00A8                     l1549:	
  1559                           
  1560                           ;PIC_mTouch.c: 70: }
  1561                           ;PIC_mTouch.c: 71: return 0;
  1562  00A8  3000               	movlw	0
  1563  00A9  0008               	return
  1564  00AA                     __end_of_mTouch_Check:	
  1565                           
  1566                           	psect	text4
  1567  0166                     __ptext4:	
  1568 ;; *************** function _UART_Init *****************
  1569 ;; Defined at:
  1570 ;;		line 37 in file "PIC_UART.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  UART_Init_PO    2    1[BANK0 ] PTR FTN()void 
  1573 ;;		 -> UART_Init_Port(1), 
  1574 ;;  brg             1    3[BANK0 ] enum E2328
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1
  1586 ;;      Params:         0       3       0
  1587 ;;      Locals:         0       0       0
  1588 ;;      Temps:          0       4       0
  1589 ;;      Totals:         0       7       0
  1590 ;;Total ram usage:        7 bytes
  1591 ;; Hardware stack levels used:    1
  1592 ;; Hardware stack levels required when called:    3
  1593 ;; This function calls:
  1594 ;;		_UART_Init_Port
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _UART_Init
  1602  0166                     _UART_Init:	
  1603                           
  1604                           ;PIC_UART.c: 39: UART_Init_PORT();
  1605                           
  1606                           ;incstack = 0
  1607                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1608  0166  0020               	movlb	0	; select bank0
  1609  0167  0845               	movf	UART_Init@UART_Init_PORT+1,w
  1610  0168  008A               	movwf	10
  1611  0169  0844               	movf	UART_Init@UART_Init_PORT,w
  1612  016A  000A               	callw
  1613  016B  3181               	pagesel	$
  1614                           
  1615                           ;PIC_UART.c: 41: TXSTA = 0x20;
  1616  016C  3020               	movlw	32
  1617  016D  0023               	movlb	3	; select bank3
  1618  016E  009E               	movwf	30	;volatile
  1619                           
  1620                           ;PIC_UART.c: 42: RCSTA = 0x10;
  1621  016F  3010               	movlw	16
  1622  0170  009D               	movwf	29	;volatile
  1623                           
  1624                           ;PIC_UART.c: 44: BRG16 = 1;
  1625  0171  159F               	bsf	31,3	;volatile
  1626                           
  1627                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
  1628  0172  0020               	movlb	0	; select bank0
  1629  0173  0846               	movf	UART_Init@brg,w
  1630  0174  00C7               	movwf	??_UART_Init
  1631  0175  01C8               	clrf	??_UART_Init+1
  1632  0176  35C7               	lslf	??_UART_Init,f
  1633  0177  0DC8               	rlf	??_UART_Init+1,f
  1634  0178  308A               	movlw	low (_baudtable| (0+32768))
  1635  0179  0747               	addwf	??_UART_Init,w
  1636  017A  0084               	movwf	4
  1637  017B  3082               	movlw	high (_baudtable| (0+32768))
  1638  017C  3D48               	addwfc	??_UART_Init+1,w
  1639  017D  0085               	movwf	5
  1640  017E  0800               	movf	0,w	;code access
  1641  017F  0023               	movlb	3	; select bank3
  1642  0180  009B               	movwf	27	;volatile
  1643                           
  1644                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
  1645  0181  0020               	movlb	0	; select bank0
  1646  0182  0846               	movf	UART_Init@brg,w
  1647  0183  00C7               	movwf	??_UART_Init
  1648  0184  01C8               	clrf	??_UART_Init+1
  1649  0185  35C7               	lslf	??_UART_Init,f
  1650  0186  0DC8               	rlf	??_UART_Init+1,f
  1651  0187  308A               	movlw	low (_baudtable| (0+32768))
  1652  0188  0747               	addwf	??_UART_Init,w
  1653  0189  0084               	movwf	4
  1654  018A  3082               	movlw	high (_baudtable| (0+32768))
  1655  018B  3D48               	addwfc	??_UART_Init+1,w
  1656  018C  0085               	movwf	5
  1657  018D  3F00               	moviw [0]fsr0
  1658  018E  00C9               	movwf	??_UART_Init+2
  1659  018F  3F01               	moviw [1]fsr0
  1660  0190  00CA               	movwf	??_UART_Init+3
  1661  0191  084A               	movf	??_UART_Init+3,w
  1662  0192  0023               	movlb	3	; select bank3
  1663  0193  009C               	movwf	28	;volatile
  1664                           
  1665                           ;PIC_UART.c: 48: RCIF = 0;
  1666  0194  0020               	movlb	0	; select bank0
  1667  0195  1291               	bcf	17,5	;volatile
  1668                           
  1669                           ;PIC_UART.c: 49: RCIE = 1;
  1670  0196  0021               	movlb	1	; select bank1
  1671  0197  1691               	bsf	17,5	;volatile
  1672                           
  1673                           ;PIC_UART.c: 50: PEIE = 1;
  1674  0198  170B               	bsf	11,6	;volatile
  1675                           
  1676                           ;PIC_UART.c: 51: GIE = 1;
  1677  0199  178B               	bsf	11,7	;volatile
  1678                           
  1679                           ;PIC_UART.c: 53: SPEN = 1;
  1680  019A  0023               	movlb	3	; select bank3
  1681  019B  179D               	bsf	29,7	;volatile
  1682                           
  1683                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  1684  019C  01F4               	clrf	_UART_Buffer_inptr
  1685                           
  1686                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  1687  019D  01F3               	clrf	_UART_Buffer_outptr
  1688  019E  0008               	return
  1689  019F                     __end_of_UART_Init:	
  1690                           
  1691                           	psect	text5
  1692  029A                     __ptext5:	
  1693 ;; *************** function _UART_Init_Port *****************
  1694 ;; Defined at:
  1695 ;;		line 104 in file "main.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;		None
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;		None
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMMON   BANK0   BANK1
  1709 ;;      Params:         0       0       0
  1710 ;;      Locals:         0       0       0
  1711 ;;      Temps:          0       1       0
  1712 ;;      Totals:         0       1       0
  1713 ;;Total ram usage:        1 bytes
  1714 ;; Hardware stack levels used:    1
  1715 ;; Hardware stack levels required when called:    2
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_main
  1720 ;;		_UART_Init
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           
  1725                           ;psect for function _UART_Init_Port
  1726  029A                     _UART_Init_Port:	
  1727                           
  1728                           ;main.c: 106: TRISA &= ~(1<<4);
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _UART_Init_Port: [wreg+status,2+status,0]
  1732  029A  30EF               	movlw	239
  1733  029B  0020               	movlb	0	; select bank0
  1734  029C  00C3               	movwf	??_UART_Init_Port
  1735  029D  0843               	movf	??_UART_Init_Port,w
  1736  029E  0021               	movlb	1	; select bank1
  1737  029F  058C               	andwf	12,f	;volatile
  1738                           
  1739                           ;main.c: 107: ANSELA &= ~(1<<4);
  1740  02A0  30EF               	movlw	239
  1741  02A1  0020               	movlb	0	; select bank0
  1742  02A2  00C3               	movwf	??_UART_Init_Port
  1743  02A3  0843               	movf	??_UART_Init_Port,w
  1744  02A4  0023               	movlb	3	; select bank3
  1745  02A5  058C               	andwf	12,f	;volatile
  1746                           
  1747                           ;main.c: 108: APFCON |= (1<<2);
  1748  02A6  0022               	movlb	2	; select bank2
  1749  02A7  151D               	bsf	29,2	;volatile
  1750  02A8  0008               	return
  1751  02A9                     __end_of_UART_Init_Port:	
  1752                           
  1753                           	psect	text6
  1754  01F2                     __ptext6:	
  1755 ;; *************** function _Timer0_Init *****************
  1756 ;; Defined at:
  1757 ;;		line 5 in file "PIC_Timer0.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  pre_val         1    wreg     enum E2341
  1760 ;;  reload_val      1    0[BANK0 ] unsigned char 
  1761 ;; Auto vars:     Size  Location     Type
  1762 ;;  pre_val         1    2[BANK0 ] enum E2341
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  1    wreg      void 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1
  1772 ;;      Params:         0       1       0
  1773 ;;      Locals:         0       1       0
  1774 ;;      Temps:          0       1       0
  1775 ;;      Totals:         0       3       0
  1776 ;;Total ram usage:        3 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    2
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_main
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _Timer0_Init
  1788  01F2                     _Timer0_Init:	
  1789                           
  1790                           ;incstack = 0
  1791                           ; Regs used in _Timer0_Init: [wreg+status,2+status,0]
  1792                           ;Timer0_Init@pre_val stored from wreg
  1793  01F2  0020               	movlb	0	; select bank0
  1794  01F3  00C5               	movwf	Timer0_Init@pre_val
  1795                           
  1796                           ;PIC_Timer0.c: 7: OPTION_REG &= ~(1<<5);
  1797  01F4  30DF               	movlw	223
  1798  01F5  00C4               	movwf	??_Timer0_Init
  1799  01F6  0844               	movf	??_Timer0_Init,w
  1800  01F7  0021               	movlb	1	; select bank1
  1801  01F8  0595               	andwf	21,f	;volatile
  1802                           
  1803                           ;PIC_Timer0.c: 8: OPTION_REG &= ~(1<<3);
  1804  01F9  30F7               	movlw	247
  1805  01FA  0020               	movlb	0	; select bank0
  1806  01FB  00C4               	movwf	??_Timer0_Init
  1807  01FC  0844               	movf	??_Timer0_Init,w
  1808  01FD  0021               	movlb	1	; select bank1
  1809  01FE  0595               	andwf	21,f	;volatile
  1810                           
  1811                           ;PIC_Timer0.c: 9: OPTION_REG &= ~(7<<0);
  1812  01FF  30F8               	movlw	248
  1813  0200  0020               	movlb	0	; select bank0
  1814  0201  00C4               	movwf	??_Timer0_Init
  1815  0202  0844               	movf	??_Timer0_Init,w
  1816  0203  0021               	movlb	1	; select bank1
  1817  0204  0595               	andwf	21,f	;volatile
  1818                           
  1819                           ;PIC_Timer0.c: 10: OPTION_REG |= ((uint8_t)pre_val<<0);
  1820  0205  0020               	movlb	0	; select bank0
  1821  0206  0845               	movf	Timer0_Init@pre_val,w
  1822  0207  00C4               	movwf	??_Timer0_Init
  1823  0208  0844               	movf	??_Timer0_Init,w
  1824  0209  0021               	movlb	1	; select bank1
  1825  020A  0495               	iorwf	21,f	;volatile
  1826                           
  1827                           ;PIC_Timer0.c: 12: TMR0_ReloadTemp = 0xFF - reload_val;
  1828  020B  0020               	movlb	0	; select bank0
  1829  020C  0343               	decf	Timer0_Init@reload_val,w
  1830  020D  3AFF               	xorlw	255
  1831  020E  3EFF               	addlw	255
  1832  020F  00C4               	movwf	??_Timer0_Init
  1833  0210  0844               	movf	??_Timer0_Init,w
  1834  0211  00D6               	movwf	_TMR0_ReloadTemp
  1835                           
  1836                           ;PIC_Timer0.c: 13: TMR0 = TMR0_ReloadTemp;
  1837  0212  0856               	movf	_TMR0_ReloadTemp,w
  1838  0213  0095               	movwf	21	;volatile
  1839                           
  1840                           ;PIC_Timer0.c: 15: TMR0IF = 0;
  1841  0214  110B               	bcf	11,2	;volatile
  1842                           
  1843                           ;PIC_Timer0.c: 16: TMR0IE = 1;
  1844  0215  168B               	bsf	11,5	;volatile
  1845                           
  1846                           ;PIC_Timer0.c: 17: PEIE = 1;
  1847  0216  170B               	bsf	11,6	;volatile
  1848                           
  1849                           ;PIC_Timer0.c: 18: GIE = 1;
  1850  0217  178B               	bsf	11,7	;volatile
  1851  0218  0008               	return
  1852  0219                     __end_of_Timer0_Init:	
  1853                           
  1854                           	psect	text7
  1855  0240                     __ptext7:	
  1856 ;; *************** function _PWM_SetDuty *****************
  1857 ;; Defined at:
  1858 ;;		line 18 in file "PIC_PWM.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  duty            2    0[BANK0 ] unsigned int 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  RegTemp         1    4[BANK0 ] unsigned char 
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2, status,0
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1
  1872 ;;      Params:         0       2       0
  1873 ;;      Locals:         0       1       0
  1874 ;;      Temps:          0       2       0
  1875 ;;      Totals:         0       5       0
  1876 ;;Total ram usage:        5 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    2
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           
  1887                           ;psect for function _PWM_SetDuty
  1888  0240                     _PWM_SetDuty:	
  1889                           
  1890                           ;PIC_PWM.c: 20: uint8_t RegTemp = CCP1CON&0xCF;
  1891                           
  1892                           ;incstack = 0
  1893                           ; Regs used in _PWM_SetDuty: [wreg+status,2+status,0]
  1894  0240  0025               	movlb	5	; select bank5
  1895  0241  0813               	movf	19,w	;volatile
  1896  0242  39CF               	andlw	207
  1897  0243  0020               	movlb	0	; select bank0
  1898  0244  00C5               	movwf	??_PWM_SetDuty
  1899  0245  0845               	movf	??_PWM_SetDuty,w
  1900  0246  00C7               	movwf	PWM_SetDuty@RegTemp
  1901                           
  1902                           ;PIC_PWM.c: 22: CCPR1L = (duty&0x03FC)>>2;
  1903  0247  0844               	movf	PWM_SetDuty@duty+1,w
  1904  0248  00C6               	movwf	??_PWM_SetDuty+1
  1905  0249  0843               	movf	PWM_SetDuty@duty,w
  1906  024A  00C5               	movwf	??_PWM_SetDuty
  1907  024B  36C6               	lsrf	??_PWM_SetDuty+1,f
  1908  024C  0CC5               	rrf	??_PWM_SetDuty,f
  1909  024D  36C6               	lsrf	??_PWM_SetDuty+1,f
  1910  024E  0CC5               	rrf	??_PWM_SetDuty,f
  1911  024F  0845               	movf	??_PWM_SetDuty,w
  1912  0250  0025               	movlb	5	; select bank5
  1913  0251  0091               	movwf	17	;volatile
  1914                           
  1915                           ;PIC_PWM.c: 23: CCP1CON = RegTemp | ((duty&0x0003)<<4);
  1916  0252  0020               	movlb	0	; select bank0
  1917  0253  0843               	movf	PWM_SetDuty@duty,w
  1918  0254  3903               	andlw	3
  1919  0255  00C5               	movwf	??_PWM_SetDuty
  1920  0256  3003               	movlw	3
  1921  0257                     u1165:	
  1922  0257  35C5               	lslf	??_PWM_SetDuty,f
  1923  0258  3EFF               	addlw	-1
  1924  0259  1D03               	skipz
  1925  025A  2A57               	goto	u1165
  1926  025B  3545               	lslf	??_PWM_SetDuty,w
  1927  025C  0447               	iorwf	PWM_SetDuty@RegTemp,w
  1928  025D  0025               	movlb	5	; select bank5
  1929  025E  0093               	movwf	19	;volatile
  1930  025F  0008               	return
  1931  0260                     __end_of_PWM_SetDuty:	
  1932                           
  1933                           	psect	text8
  1934  0260                     __ptext8:	
  1935 ;; *************** function _PWM_Init *****************
  1936 ;; Defined at:
  1937 ;;		line 3 in file "PIC_PWM.c"
  1938 ;; Parameters:    Size  Location     Type
  1939 ;;  PMW_Init_POR    2    1[BANK0 ] PTR FTN()void 
  1940 ;;		 -> PWM_Init_Port(1), 
  1941 ;;  pre_val         1    3[BANK0 ] enum E2341
  1942 ;;  period          1    4[BANK0 ] unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;		None
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0, pclath, cstack
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1
  1954 ;;      Params:         0       4       0
  1955 ;;      Locals:         0       0       0
  1956 ;;      Temps:          0       1       0
  1957 ;;      Totals:         0       5       0
  1958 ;;Total ram usage:        5 bytes
  1959 ;; Hardware stack levels used:    1
  1960 ;; Hardware stack levels required when called:    3
  1961 ;; This function calls:
  1962 ;;		_PWM_Init_Port
  1963 ;; This function is called by:
  1964 ;;		_main
  1965 ;; This function uses a non-reentrant model
  1966 ;;
  1967                           
  1968                           
  1969                           ;psect for function _PWM_Init
  1970  0260                     _PWM_Init:	
  1971                           
  1972                           ;PIC_PWM.c: 5: PMW_Init_PORT();
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  1976  0260  0020               	movlb	0	; select bank0
  1977  0261  0845               	movf	PWM_Init@PMW_Init_PORT+1,w
  1978  0262  008A               	movwf	10
  1979  0263  0844               	movf	PWM_Init@PMW_Init_PORT,w
  1980  0264  000A               	callw
  1981  0265  3182               	pagesel	$
  1982                           
  1983                           ;PIC_PWM.c: 7: PR2 = period;
  1984  0266  0020               	movlb	0	; select bank0
  1985  0267  0847               	movf	PWM_Init@period,w
  1986  0268  009B               	movwf	27	;volatile
  1987                           
  1988                           ;PIC_PWM.c: 8: TMR2 = 0x00;
  1989  0269  019A               	clrf	26	;volatile
  1990                           
  1991                           ;PIC_PWM.c: 9: T2CON |= ((uint8_t)pre_val<<0);
  1992  026A  0846               	movf	PWM_Init@pre_val,w
  1993  026B  00C8               	movwf	??_PWM_Init
  1994  026C  0848               	movf	??_PWM_Init,w
  1995  026D  049C               	iorwf	28,f	;volatile
  1996                           
  1997                           ;PIC_PWM.c: 10: T2CON |= (0x00<<3);
  1998  026E  081C               	movf	28,w	;volatile
  1999                           
  2000                           ;PIC_PWM.c: 11: T2CON |= (0x01<<2);
  2001  026F  151C               	bsf	28,2	;volatile
  2002                           
  2003                           ;PIC_PWM.c: 13: CCP1CON &= ~(3<<6);
  2004  0270  303F               	movlw	63
  2005  0271  00C8               	movwf	??_PWM_Init
  2006  0272  0848               	movf	??_PWM_Init,w
  2007  0273  0025               	movlb	5	; select bank5
  2008  0274  0593               	andwf	19,f	;volatile
  2009                           
  2010                           ;PIC_PWM.c: 15: CCPR1L = 0x00;
  2011  0275  0191               	clrf	17	;volatile
  2012  0276  0008               	return
  2013  0277                     __end_of_PWM_Init:	
  2014                           
  2015                           	psect	text9
  2016  0277                     __ptext9:	
  2017 ;; *************** function _PWM_Init_Port *****************
  2018 ;; Defined at:
  2019 ;;		line 111 in file "main.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;		None
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, status,0
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1
  2033 ;;      Params:         0       0       0
  2034 ;;      Locals:         0       0       0
  2035 ;;      Temps:          0       1       0
  2036 ;;      Totals:         0       1       0
  2037 ;;Total ram usage:        1 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    2
  2040 ;; This function calls:
  2041 ;;		Nothing
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;;		_PWM_Init
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           
  2049                           ;psect for function _PWM_Init_Port
  2050  0277                     _PWM_Init_Port:	
  2051                           
  2052                           ;main.c: 113: TRISA &= ~(1<<2);
  2053                           
  2054                           ;incstack = 0
  2055                           ; Regs used in _PWM_Init_Port: [wreg+status,2+status,0]
  2056  0277  30FB               	movlw	251
  2057  0278  0020               	movlb	0	; select bank0
  2058  0279  00C3               	movwf	??_PWM_Init_Port
  2059  027A  0843               	movf	??_PWM_Init_Port,w
  2060  027B  0021               	movlb	1	; select bank1
  2061  027C  058C               	andwf	12,f	;volatile
  2062                           
  2063                           ;main.c: 114: APFCON &= ~(1<<0);
  2064  027D  30FE               	movlw	254
  2065  027E  0020               	movlb	0	; select bank0
  2066  027F  00C3               	movwf	??_PWM_Init_Port
  2067  0280  0843               	movf	??_PWM_Init_Port,w
  2068  0281  0022               	movlb	2	; select bank2
  2069  0282  059D               	andwf	29,f	;volatile
  2070                           
  2071                           ;main.c: 115: ANSELA &= ~(1<<2);
  2072  0283  30FB               	movlw	251
  2073  0284  0020               	movlb	0	; select bank0
  2074  0285  00C3               	movwf	??_PWM_Init_Port
  2075  0286  0843               	movf	??_PWM_Init_Port,w
  2076  0287  0023               	movlb	3	; select bank3
  2077  0288  058C               	andwf	12,f	;volatile
  2078  0289  0008               	return
  2079  028A                     __end_of_PWM_Init_Port:	
  2080                           
  2081                           	psect	text10
  2082  02B7                     __ptext10:	
  2083 ;; *************** function _Basic_Init *****************
  2084 ;; Defined at:
  2085 ;;		line 69 in file "main.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMMON   BANK0   BANK1
  2099 ;;      Params:         0       0       0
  2100 ;;      Locals:         0       0       0
  2101 ;;      Temps:          0       0       0
  2102 ;;      Totals:         0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:    2
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           
  2114                           ;psect for function _Basic_Init
  2115  02B7                     _Basic_Init:	
  2116                           
  2117                           ;main.c: 71: OSCCON = 0xF0;
  2118                           
  2119                           ;incstack = 0
  2120                           ; Regs used in _Basic_Init: [wreg+status,2]
  2121  02B7  30F0               	movlw	240
  2122  02B8  0021               	movlb	1	; select bank1
  2123  02B9  0099               	movwf	25	;volatile
  2124                           
  2125                           ;main.c: 75: TRISA = 0x00;
  2126  02BA  018C               	clrf	12	;volatile
  2127                           
  2128                           ;main.c: 76: ANSELA = 0x00;
  2129  02BB  0023               	movlb	3	; select bank3
  2130  02BC  018C               	clrf	12	;volatile
  2131                           
  2132                           ;main.c: 77: WPUA = 0x00;
  2133  02BD  0024               	movlb	4	; select bank4
  2134  02BE  018C               	clrf	12	;volatile
  2135                           
  2136                           ;main.c: 80: APFCON = 0x00;
  2137  02BF  0022               	movlb	2	; select bank2
  2138  02C0  019D               	clrf	29	;volatile
  2139                           
  2140                           ;main.c: 82: PORTA = 0x00;
  2141  02C1  0020               	movlb	0	; select bank0
  2142  02C2  018C               	clrf	12	;volatile
  2143  02C3  0008               	return
  2144  02C4                     __end_of_Basic_Init:	
  2145                           
  2146                           	psect	intentry
  2147  0004                     __pintentry:	
  2148 ;; *************** function _Handler *****************
  2149 ;; Defined at:
  2150 ;;		line 86 in file "main.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;		None
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMMON   BANK0   BANK1
  2164 ;;      Params:         0       0       0
  2165 ;;      Locals:         0       0       0
  2166 ;;      Temps:          1       0       0
  2167 ;;      Totals:         1       0       0
  2168 ;;Total ram usage:        1 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:    1
  2171 ;; This function calls:
  2172 ;;		_Timer0_CheckFlag
  2173 ;;		_UART_Interrupt
  2174 ;;		_mTouch_Count1ms
  2175 ;;		_mTouch_Scan
  2176 ;; This function is called by:
  2177 ;;		Interrupt level 1
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181  0004                     _Handler:	
  2182                           
  2183                           ;incstack = 0
  2184  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2185                           
  2186                           ; Regs used in _Handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2187  0005  3180               	pagesel	$
  2188  0006  0020               	movlb	0	; select bank0
  2189  0007  087F               	movf	127,w
  2190  0008  00F9               	movwf	??_Handler
  2191                           
  2192                           ;main.c: 88: static uint16_t Interval = 0;
  2193                           ;main.c: 90: if(Timer0_CheckFlag())
  2194  0009  22D0               	fcall	_Timer0_CheckFlag
  2195  000A  3A00               	xorlw	0
  2196  000B  1903               	skipnz
  2197  000C  281D               	goto	i1l1249
  2198                           
  2199                           ;main.c: 91: {
  2200                           ;main.c: 92: mTouch_Count1ms();
  2201  000D  219F               	fcall	_mTouch_Count1ms
  2202                           
  2203                           ;main.c: 94: if(++Interval>30)
  2204  000E  3001               	movlw	1
  2205  000F  0020               	movlb	0	; select bank0
  2206  0010  07C0               	addwf	Handler@Interval,f
  2207  0011  3000               	movlw	0
  2208  0012  3DC1               	addwfc	Handler@Interval+1,f
  2209  0013  3000               	movlw	0
  2210  0014  0241               	subwf	Handler@Interval+1,w
  2211  0015  301F               	movlw	31
  2212  0016  1903               	skipnz
  2213  0017  0240               	subwf	Handler@Interval,w
  2214  0018  1C03               	skipc
  2215  0019  281D               	goto	i1l1249
  2216                           
  2217                           ;main.c: 95: {
  2218                           ;main.c: 96: Interval = 0;
  2219  001A  01C0               	clrf	Handler@Interval
  2220  001B  01C1               	clrf	Handler@Interval+1
  2221                           
  2222                           ;main.c: 97: mTouch_Scan();
  2223  001C  2114               	fcall	_mTouch_Scan
  2224  001D                     i1l1249:	
  2225                           
  2226                           ;main.c: 98: }
  2227                           ;main.c: 99: }
  2228                           ;main.c: 100: UART_Interrupt();
  2229  001D  2219               	fcall	_UART_Interrupt
  2230  001E  0879               	movf	??_Handler,w
  2231  001F  0020               	movlb	0	; select bank0
  2232  0020  00FF               	movwf	127
  2233  0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2234  0022  0009               	retfie
  2235  0023                     __end_of_Handler:	
  2236                           
  2237                           	psect	text12
  2238  0114                     __ptext12:	
  2239 ;; *************** function _mTouch_Scan *****************
  2240 ;; Defined at:
  2241 ;;		line 33 in file "PIC_mTouch.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMMON   BANK0   BANK1
  2255 ;;      Params:         0       0       0
  2256 ;;      Locals:         0       0       0
  2257 ;;      Temps:          4       0       0
  2258 ;;      Totals:         4       0       0
  2259 ;;Total ram usage:        4 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; This function calls:
  2262 ;;		Nothing
  2263 ;; This function is called by:
  2264 ;;		_Handler
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _mTouch_Scan
  2270  0114                     _mTouch_Scan:	
  2271                           
  2272                           ;PIC_mTouch.c: 35: static uint8_t elements = 0;
  2273                           ;PIC_mTouch.c: 37: config_ptr[elements].CPS_PreData = config_ptr[elements].CPS_Data;
  2274                           
  2275                           ;incstack = 0
  2276                           ; Regs used in _mTouch_Scan: [wreg-fsr1h+status,2+status,0]
  2277  0114  0870               	movf	mTouch_Scan@elements,w
  2278  0115  00F5               	movwf	??_mTouch_Scan
  2279  0116  3002               	movlw	2
  2280  0117                     u53_25:	
  2281  0117  35F5               	lslf	??_mTouch_Scan,f
  2282  0118  3EFF               	addlw	-1
  2283  0119  1D03               	skipz
  2284  011A  2917               	goto	u53_25
  2285  011B  3575               	lslf	??_mTouch_Scan,w
  2286  011C  0772               	addwf	_config_ptr,w
  2287  011D  00F6               	movwf	??_mTouch_Scan+1
  2288  011E  0876               	movf	??_mTouch_Scan+1,w
  2289  011F  3E03               	addlw	3
  2290  0120  0086               	movwf	6
  2291  0121  0187               	clrf	7
  2292  0122  0870               	movf	mTouch_Scan@elements,w
  2293  0123  00F7               	movwf	??_mTouch_Scan+2
  2294  0124  3002               	movlw	2
  2295  0125                     u54_25:	
  2296  0125  35F7               	lslf	??_mTouch_Scan+2,f
  2297  0126  3EFF               	addlw	-1
  2298  0127  1D03               	skipz
  2299  0128  2925               	goto	u54_25
  2300  0129  3577               	lslf	??_mTouch_Scan+2,w
  2301  012A  0772               	addwf	_config_ptr,w
  2302  012B  00F8               	movwf	??_mTouch_Scan+3
  2303  012C  0878               	movf	??_mTouch_Scan+3,w
  2304  012D  3E05               	addlw	5
  2305  012E  0084               	movwf	4
  2306  012F  0185               	clrf	5
  2307  0130  3F40               	moviw [0]fsr1
  2308  0131  3F80               	movwi [0]fsr0
  2309  0132  3F41               	moviw [1]fsr1
  2310  0133  3F81               	movwi [1]fsr0
  2311                           
  2312                           ;PIC_mTouch.c: 39: CPSCON0 &= ~(0x01<<7);;
  2313  0134  307F               	movlw	127
  2314  0135  00F5               	movwf	??_mTouch_Scan
  2315  0136  0875               	movf	??_mTouch_Scan,w
  2316  0137  0020               	movlb	0	; select bank0
  2317  0138  059E               	andwf	30,f	;volatile
  2318                           
  2319                           ;PIC_mTouch.c: 41: config_ptr[elements].CPS_Data = TMR1;
  2320  0139  0870               	movf	mTouch_Scan@elements,w
  2321  013A  00F5               	movwf	??_mTouch_Scan
  2322  013B  3002               	movlw	2
  2323  013C                     u55_25:	
  2324  013C  35F5               	lslf	??_mTouch_Scan,f
  2325  013D  3EFF               	addlw	-1
  2326  013E  1D03               	skipz
  2327  013F  293C               	goto	u55_25
  2328  0140  3575               	lslf	??_mTouch_Scan,w
  2329  0141  0772               	addwf	_config_ptr,w
  2330  0142  00F6               	movwf	??_mTouch_Scan+1
  2331  0143  0876               	movf	??_mTouch_Scan+1,w
  2332  0144  3E03               	addlw	3
  2333  0145  0086               	movwf	6
  2334  0146  0187               	clrf	7
  2335  0147  0816               	movf	22,w	;volatile
  2336  0148  3FC0               	movwi [0]fsr1
  2337  0149  0817               	movf	23,w	;volatile
  2338  014A  3FC1               	movwi [1]fsr1
  2339                           
  2340                           ;PIC_mTouch.c: 42: TMR1 = 0x0000;
  2341  014B  0196               	clrf	22	;volatile
  2342  014C  0197               	clrf	23	;volatile
  2343                           
  2344                           ;PIC_mTouch.c: 44: CPSCON0 |= (0x01<<7);;
  2345  014D  179E               	bsf	30,7	;volatile
  2346                           
  2347                           ;PIC_mTouch.c: 46: if(++elements>=using_channel)elements = 0;
  2348  014E  3001               	movlw	1
  2349  014F  00F5               	movwf	??_mTouch_Scan
  2350  0150  0875               	movf	??_mTouch_Scan,w
  2351  0151  07F0               	addwf	mTouch_Scan@elements,f
  2352  0152  0871               	movf	_using_channel,w
  2353  0153  0270               	subwf	mTouch_Scan@elements,w
  2354  0154  1803               	btfsc	3,0
  2355  0155  01F0               	clrf	mTouch_Scan@elements
  2356                           
  2357                           ;PIC_mTouch.c: 48: CPSCON1 = (uint8_t)config_ptr[elements].CPS_Channel;
  2358  0156  0870               	movf	mTouch_Scan@elements,w
  2359  0157  00F5               	movwf	??_mTouch_Scan
  2360  0158  3002               	movlw	2
  2361  0159                     u57_25:	
  2362  0159  35F5               	lslf	??_mTouch_Scan,f
  2363  015A  3EFF               	addlw	-1
  2364  015B  1D03               	skipz
  2365  015C  2959               	goto	u57_25
  2366  015D  3575               	lslf	??_mTouch_Scan,w
  2367  015E  0772               	addwf	_config_ptr,w
  2368  015F  00F6               	movwf	??_mTouch_Scan+1
  2369  0160  0876               	movf	??_mTouch_Scan+1,w
  2370  0161  0086               	movwf	6
  2371  0162  0187               	clrf	7
  2372  0163  0801               	movf	1,w
  2373  0164  009F               	movwf	31	;volatile
  2374  0165  0008               	return
  2375  0166                     __end_of_mTouch_Scan:	
  2376                           
  2377                           	psect	text13
  2378  019F                     __ptext13:	
  2379 ;; *************** function _mTouch_Count1ms *****************
  2380 ;; Defined at:
  2381 ;;		line 51 in file "PIC_mTouch.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;		None
  2384 ;; Auto vars:     Size  Location     Type
  2385 ;;  elements        1    2[COMMON] unsigned char 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;                  1    wreg      void 
  2388 ;; Registers used:
  2389 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0   BANK1
  2395 ;;      Params:         0       0       0
  2396 ;;      Locals:         1       0       0
  2397 ;;      Temps:          2       0       0
  2398 ;;      Totals:         3       0       0
  2399 ;;Total ram usage:        3 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_Handler
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function _mTouch_Count1ms
  2410  019F                     _mTouch_Count1ms:	
  2411                           
  2412                           ;PIC_mTouch.c: 53: for(uint8_t elements=0;elements<using_channel;elements++)
  2413                           
  2414                           ;incstack = 0
  2415                           ; Regs used in _mTouch_Count1ms: [wreg+fsr1l+fsr1h+status,2+status,0]
  2416  019F  01F7               	clrf	mTouch_Count1ms@elements
  2417  01A0                     i1l1177:	
  2418  01A0  0871               	movf	_using_channel,w
  2419  01A1  0277               	subwf	mTouch_Count1ms@elements,w
  2420  01A2  1803               	btfsc	3,0
  2421  01A3  0008               	return
  2422                           
  2423                           ;PIC_mTouch.c: 54: {
  2424                           ;PIC_mTouch.c: 55: if(config_ptr[elements].Check_Interval)
  2425  01A4  0877               	movf	mTouch_Count1ms@elements,w
  2426  01A5  00F5               	movwf	??_mTouch_Count1ms
  2427  01A6  3002               	movlw	2
  2428  01A7                     u49_25:	
  2429  01A7  35F5               	lslf	??_mTouch_Count1ms,f
  2430  01A8  3EFF               	addlw	-1
  2431  01A9  1D03               	skipz
  2432  01AA  29A7               	goto	u49_25
  2433  01AB  3575               	lslf	??_mTouch_Count1ms,w
  2434  01AC  0772               	addwf	_config_ptr,w
  2435  01AD  00F6               	movwf	??_mTouch_Count1ms+1
  2436  01AE  0876               	movf	??_mTouch_Count1ms+1,w
  2437  01AF  3E07               	addlw	7
  2438  01B0  0086               	movwf	6
  2439  01B1  0187               	clrf	7
  2440  01B2  0801               	movf	1,w
  2441  01B3  1903               	btfsc	3,2
  2442  01B4  29C5               	goto	i1l1175
  2443                           
  2444                           ;PIC_mTouch.c: 56: config_ptr[elements].Check_Interval--;
  2445  01B5  0877               	movf	mTouch_Count1ms@elements,w
  2446  01B6  00F5               	movwf	??_mTouch_Count1ms
  2447  01B7  3002               	movlw	2
  2448  01B8                     u51_25:	
  2449  01B8  35F5               	lslf	??_mTouch_Count1ms,f
  2450  01B9  3EFF               	addlw	-1
  2451  01BA  1D03               	skipz
  2452  01BB  29B8               	goto	u51_25
  2453  01BC  3575               	lslf	??_mTouch_Count1ms,w
  2454  01BD  0772               	addwf	_config_ptr,w
  2455  01BE  00F6               	movwf	??_mTouch_Count1ms+1
  2456  01BF  0876               	movf	??_mTouch_Count1ms+1,w
  2457  01C0  3E07               	addlw	7
  2458  01C1  0086               	movwf	6
  2459  01C2  0187               	clrf	7
  2460  01C3  3001               	movlw	1
  2461  01C4  0281               	subwf	1,f
  2462  01C5                     i1l1175:	
  2463  01C5  3001               	movlw	1
  2464  01C6  00F5               	movwf	??_mTouch_Count1ms
  2465  01C7  0875               	movf	??_mTouch_Count1ms,w
  2466  01C8  07F7               	addwf	mTouch_Count1ms@elements,f
  2467  01C9  29A0               	goto	i1l1177
  2468  01CA                     __end_of_mTouch_Count1ms:	
  2469                           
  2470                           	psect	text14
  2471  0219                     __ptext14:	
  2472 ;; *************** function _UART_Interrupt *****************
  2473 ;; Defined at:
  2474 ;;		line 107 in file "PIC_UART.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;  x               1    2[COMMON] unsigned char 
  2479 ;;  dt              1    1[COMMON] unsigned char 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMMON   BANK0   BANK1
  2489 ;;      Params:         0       0       0
  2490 ;;      Locals:         2       0       0
  2491 ;;      Temps:          1       0       0
  2492 ;;      Totals:         3       0       0
  2493 ;;Total ram usage:        3 bytes
  2494 ;; Hardware stack levels used:    1
  2495 ;; This function calls:
  2496 ;;		Nothing
  2497 ;; This function is called by:
  2498 ;;		_Handler
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function _UART_Interrupt
  2504  0219                     _UART_Interrupt:	
  2505                           
  2506                           ;PIC_UART.c: 109: uint8_t x;
  2507                           ;PIC_UART.c: 110: uint8_t dt;
  2508                           ;PIC_UART.c: 112: if (RCIF == 1)
  2509                           
  2510                           ;incstack = 0
  2511                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  2512  0219  0020               	movlb	0	; select bank0
  2513  021A  1E91               	btfss	17,5	;volatile
  2514  021B  0008               	return
  2515                           
  2516                           ;PIC_UART.c: 113: {
  2517                           ;PIC_UART.c: 114: dt = RCREG;
  2518  021C  0023               	movlb	3	; select bank3
  2519  021D  0819               	movf	25,w	;volatile
  2520  021E  00F5               	movwf	??_UART_Interrupt
  2521  021F  0875               	movf	??_UART_Interrupt,w
  2522  0220  00F6               	movwf	UART_Interrupt@dt
  2523                           
  2524                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 32;
  2525  0221  0873               	movf	_UART_Buffer_outptr,w
  2526  0222  3E01               	addlw	1
  2527  0223  391F               	andlw	31
  2528  0224  00F5               	movwf	??_UART_Interrupt
  2529  0225  0875               	movf	??_UART_Interrupt,w
  2530  0226  00F7               	movwf	UART_Interrupt@x
  2531                           
  2532                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  2533  0227  0877               	movf	UART_Interrupt@x,w
  2534  0228  0674               	xorwf	_UART_Buffer_inptr,w
  2535  0229  1903               	skipnz
  2536  022A  2A37               	goto	i1l1207
  2537                           
  2538                           ;PIC_UART.c: 117: {
  2539                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  2540  022B  0876               	movf	UART_Interrupt@dt,w
  2541  022C  00F5               	movwf	??_UART_Interrupt
  2542  022D  0873               	movf	_UART_Buffer_outptr,w
  2543  022E  3E20               	addlw	(low (_UART_Buffer| 0))& (0+255)
  2544  022F  0086               	movwf	6
  2545  0230  0187               	clrf	7
  2546  0231  0875               	movf	??_UART_Interrupt,w
  2547  0232  0081               	movwf	1
  2548                           
  2549                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  2550  0233  0877               	movf	UART_Interrupt@x,w
  2551  0234  00F5               	movwf	??_UART_Interrupt
  2552  0235  0875               	movf	??_UART_Interrupt,w
  2553  0236  00F3               	movwf	_UART_Buffer_outptr
  2554  0237                     i1l1207:	
  2555                           
  2556                           ;PIC_UART.c: 120: }
  2557                           ;PIC_UART.c: 122: if (OERR == 1)
  2558  0237  1C9D               	btfss	29,1	;volatile
  2559  0238  2A3D               	goto	i1l178
  2560                           
  2561                           ;PIC_UART.c: 123: {
  2562                           ;PIC_UART.c: 124: CREN = 0;
  2563  0239  121D               	bcf	29,4	;volatile
  2564  023A                     i1l179:	
  2565                           ;PIC_UART.c: 125: while (OERR);
  2566                           
  2567  023A  189D               	btfsc	29,1	;volatile
  2568  023B  2A3A               	goto	i1l179
  2569                           
  2570                           ;PIC_UART.c: 126: CREN = 1;
  2571  023C  161D               	bsf	29,4	;volatile
  2572  023D                     i1l178:	
  2573                           
  2574                           ;PIC_UART.c: 127: }
  2575                           ;PIC_UART.c: 128: RCIF = 0;
  2576  023D  0020               	movlb	0	; select bank0
  2577  023E  1291               	bcf	17,5	;volatile
  2578  023F  0008               	return
  2579  0240                     __end_of_UART_Interrupt:	
  2580                           
  2581                           	psect	text15
  2582  02D0                     __ptext15:	
  2583 ;; *************** function _Timer0_CheckFlag *****************
  2584 ;; Defined at:
  2585 ;;		line 21 in file "PIC_Timer0.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      unsigned char 
  2592 ;; Registers used:
  2593 ;;		wreg
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1
  2599 ;;      Params:         0       0       0
  2600 ;;      Locals:         0       0       0
  2601 ;;      Temps:          0       0       0
  2602 ;;      Totals:         0       0       0
  2603 ;;Total ram usage:        0 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; This function calls:
  2606 ;;		Nothing
  2607 ;; This function is called by:
  2608 ;;		_Handler
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           
  2613                           ;psect for function _Timer0_CheckFlag
  2614  02D0                     _Timer0_CheckFlag:	
  2615                           
  2616                           ;PIC_Timer0.c: 23: if(TMR0IE&&TMR0IF)
  2617                           
  2618                           ;incstack = 0
  2619                           ; Regs used in _Timer0_CheckFlag: [wreg]
  2620  02D0  1A8B               	btfsc	11,5	;volatile
  2621  02D1  1D0B               	btfss	11,2	;volatile
  2622  02D2  2AD9               	goto	i1l1165
  2623                           
  2624                           ;PIC_Timer0.c: 24: {
  2625                           ;PIC_Timer0.c: 25: TMR0 = TMR0_ReloadTemp;
  2626  02D3  0020               	movlb	0	; select bank0
  2627  02D4  0856               	movf	_TMR0_ReloadTemp,w
  2628  02D5  0095               	movwf	21	;volatile
  2629                           
  2630                           ;PIC_Timer0.c: 26: TMR0IF = 0;
  2631  02D6  110B               	bcf	11,2	;volatile
  2632                           
  2633                           ;PIC_Timer0.c: 27: return 1;
  2634  02D7  3001               	movlw	1
  2635  02D8  0008               	return
  2636  02D9                     i1l1165:	
  2637                           
  2638                           ;PIC_Timer0.c: 28: }
  2639                           ;PIC_Timer0.c: 29: return 0;
  2640  02D9  3000               	movlw	0
  2641  02DA  0008               	return
  2642  02DB                     __end_of_Timer0_CheckFlag:	
  2643  007E                     btemp	set	126	;btemp
  2644  007E                     int$flags	set	126
  2645  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    36
    Data        0
    BSS         40
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     19      55
    BANK1            32      0       0

Pointer List with Targets:

    mTouch_Init@cps_config	PTR struct . size(1) Largest target is 8
		 -> main@cps_conf(BANK0[8]), 

    config_ptr	PTR struct . size(1) Largest target is 8
		 -> NULL(NULL[0]), main@cps_conf(BANK0[8]), 

    mTouch_Init@mTouch_PortInit	PTR FTN()void  size(2) Largest target is 1
		 -> mTouch_Init_Port(), 

    PWM_Init@PMW_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> PWM_Init_Port(), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_Init_Port(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Handler->_mTouch_Scan

Critical Paths under _main in BANK0

    _main->_mTouch_Check
    _UART_Init->_UART_Init_Port
    _PWM_Init->_PWM_Init_Port

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    1432
                                              9 BANK0     10    10      0
                         _Basic_Init
                           _PWM_Init
                        _PWM_SetDuty
                        _Timer0_Init
                          _UART_Init
                       _mTouch_Check
                        _mTouch_Init
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          5     1      4     288
                                              0 BANK0      5     1      4
                   _mTouch_Init_Port *
 ---------------------------------------------------------------------------------
 (2) _mTouch_Init_Port                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         9     9      0     220
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     223
                                              1 BANK0      7     4      3
                     _UART_Init_Port *
 ---------------------------------------------------------------------------------
 (2) _UART_Init_Port                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          3     2      1     127
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _PWM_SetDuty                                          5     3      2     161
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             5     1      4     288
                                              1 BANK0      5     1      4
                      _PWM_Init_Port *
 ---------------------------------------------------------------------------------
 (2) _PWM_Init_Port                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Handler                                              1     1      0     136
                                              4 COMMON     1     1      0
                   _Timer0_CheckFlag
                     _UART_Interrupt
                    _mTouch_Count1ms
                        _mTouch_Scan
 ---------------------------------------------------------------------------------
 (4) _mTouch_Scan                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _mTouch_Count1ms                                      3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _UART_Interrupt                                       3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Timer0_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _PWM_Init
     _PWM_Init_Port *
   _PWM_SetDuty
   _Timer0_Init
   _UART_Init
     _UART_Init_Port *
   _mTouch_Check
   _mTouch_Init
     _mTouch_Init_Port *

 _Handler (ROOT)
   _Timer0_CheckFlag
   _UART_Interrupt
   _mTouch_Count1ms
   _mTouch_Scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      41       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     13      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      41       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Sun Sep 17 10:38:33 2017

               __CFG_CP$OFF 0000                          l57 0100                         _GIE 005F  
                       _PR2 001B                __CFG_CPD$OFF 0000             PWM_SetDuty@duty 0043  
              __CFG_BORV$LO 0000                 _PWM_SetDuty 0240                         wreg 0009  
                _Basic_Init 02B7                __CFG_LVP$OFF 0000                        l1537 003A  
                      l1549 00A8                        l1583 0102                        l1575 00ED  
                      STR_1 02C4                        STR_2 02A9                        STR_3 02FA  
                      _CREN 0CEC                        u1105 004B                        u1115 0068  
                      u1125 0080                        u1135 0086                        u1155 0099  
                      u1165 0257                        u1095 003D                        u1197 00E7  
                      _PEIE 005E                        _RCIE 048D                        _RCIF 008D  
                      _OERR 0CE9                        _TMR0 0015                        _TMR1 0016  
                      _TMR2 001A                        _SPEN 0CEF                        _TXIF 008C  
                      _WPUA 020C                __CFG_WRT$OFF 0000       mTouch_Init@cps_config 0045  
                      _main 00AA                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        btemp 007E                        start 0023  
             __CFG_IESO$OFF 0000             __end_of_Handler 0023               __CFG_MCLRE$ON 0000  
                _Blightness 02E5        mTouch_Check@elements 004B   mTouch_Init@num_of_channel 0046  
             __CFG_PLLEN$ON 0000                main@cps_conf 004E                       ?_main 0075  
                     _BRG16 0CFB               __CFG_WDTE$OFF 0000                       _T1CON 0018  
                     _T2CON 001C                       _LATA5 0865                       i1l178 023D  
                     i1l179 023A                       _RCREG 0199                       _RCSTA 019D  
                     _PORTA 000C                       u51_25 01B8                       u53_25 0117  
                     u54_25 0125                       u55_25 013C                       _TRISA 008C  
                     u49_25 01A7                       u57_25 0159                       _TXREG 019A  
                     _TXSTA 019E              __CFG_FCMEN$OFF 0000               _PWM_Init_Port 0277  
        __size_of_UART_Init 0039           _UART_Buffer_inptr 0074             __end_of_dpowers 02E5  
            __CFG_BOREN$OFF 0000                       pclath 000A            __end_of_PWM_Init 0277  
                     status 0003                       wtemp0 007E             __initialization 0024  
              __end_of_main 0114   __size_of_mTouch_Init_Port 0005                      ??_main 004C  
         ?_Timer0_CheckFlag 0075        __end_of_mTouch_Check 00AA          ??_Timer0_CheckFlag 0075  
            ?_PWM_Init_Port 0075                 ?_Basic_Init 0075             _mTouch_Count1ms 019F  
      __size_of_mTouch_Init 0028        __size_of_mTouch_Scan 0052                      _CCPR1L 0291  
                    _APFCON 011D                      _ANSELA 018C          PWM_SetDuty@RegTemp 0047  
                    _T1GCON 0019                      i1l1207 0237                      i1l1165 02D9  
                    i1l1175 01C5                      i1l1177 01A0                      i1l1249 001D  
                    _OSCCON 0099                      _TMR0IE 005D                      _TMR0IF 005A  
                 ??_Handler 0079                      _SPBRGH 019C                      _SPBRGL 019B  
             ??_Timer0_Init 0044              __CFG_PWRTE$OFF 0000           __end_of_UART_Init 019F  
        Timer0_Init@pre_val 0045     __size_of_UART_Init_Port 000F          _UART_Buffer_outptr 0073  
   __size_of_UART_Interrupt 0027     UART_Init@UART_Init_PORT 0044               _using_channel 0071  
   __end_of__initialization 002F              __pcstackCOMMON 0075         __size_of_Basic_Init 000D  
       __end_of_Timer0_Init 0219     __end_of_mTouch_Count1ms 01CA                   ?_PWM_Init 0044  
           ??_PWM_Init_Port 0043                ?_PWM_SetDuty 0043                  __pbssBANK0 0020  
   mTouch_Count1ms@elements 0077                  __pmaintext 00AA                  __pintentry 0004  
     __size_of_mTouch_Check 0078                     _CCP1CON 0293            _mTouch_Init_Port 02F5  
                ??_PWM_Init 0048                     _CPSCON0 001E                     _CPSCON1 001F  
                _config_ptr 0072           __end_of_baudtable 029A                     _Handler 0004  
              _mTouch_Check 0032                 _Timer0_Init 01F2              _UART_Init_Port 029A  
           __CFG_STVREN$OFF 0000                     __ptext1 01CA                     __ptext2 02F5  
                   __ptext3 0032                     __ptext4 0166                     __ptext5 029A  
                   __ptext6 01F2                     __ptext7 0240                     __ptext8 0260  
                   __ptext9 0277            ?_mTouch_Count1ms 0075              _UART_Interrupt 0219  
                   _dpowers 02DB                ??_Basic_Init 0043                     clrloop0 02F0  
      end_of_initialization 002F   __size_of_Timer0_CheckFlag 000B      __end_of_UART_Init_Port 02A9  
        __end_of_Basic_Init 02C4      __end_of_UART_Interrupt 0240                   _UART_Init 0166  
          __CFG_FOSC$INTOSC 0000               ??_mTouch_Init 0047               ??_mTouch_Scan 0075  
      __size_of_PWM_SetDuty 0020          __end_of_Blightness 02EF             ?_UART_Init_Port 0075  
          UART_Interrupt@dt 0076             ?_UART_Interrupt 0075                  ?_UART_Init 0044  
         __size_of_PWM_Init 0017         start_initialization 0024         __end_of_mTouch_Init 01F2  
       __end_of_mTouch_Scan 0166    __end_of_mTouch_Init_Port 02FA       Timer0_Init@reload_val 0043  
     __end_of_PWM_Init_Port 028A                 __pbssCOMMON 0070                   ___latbits 0000  
             __pcstackBANK0 0043            _Timer0_CheckFlag 02D0                    ?_Handler 0075  
                 _baudtable 028A                   __pnvBANK0 0056                ?_Timer0_Init 0043  
mTouch_Init@mTouch_PortInit 0043                 ??_UART_Init 0047                 _mTouch_Init 01CA  
               _mTouch_Scan 0114                   clear_ram0 02EF                    _PWM_Init 0260  
           UART_Interrupt@x 0077    __size_of_mTouch_Count1ms 002B            ??_UART_Init_Port 0043  
          __size_of_Handler 001F            ??_UART_Interrupt 0075               ??_PWM_SetDuty 0045  
              UART_Init@brg 0046                    __ptext10 02B7                    __ptext12 0114  
                  __ptext13 019F                    __ptext14 0219                    __ptext15 02D0  
           PWM_Init@pre_val 0046                    _elements 0042           ?_mTouch_Init_Port 0075  
             __size_of_main 006A       PWM_Init@PMW_Init_PORT 0044          ??_mTouch_Init_Port 0043  
      __size_of_Timer0_Init 0027                    int$flags 007E         mTouch_Scan@elements 0070  
  __end_of_Timer0_CheckFlag 02DB                    intlevel1 0000         __end_of_PWM_SetDuty 0260  
            PWM_Init@period 0047           __CFG_CLKOUTEN$OFF 0000                 _UART_Buffer 0020  
         ??_mTouch_Count1ms 0075               ?_mTouch_Check 0075             Handler@Interval 0040  
             __pstringtext1 028A               __pstringtext2 02DB               __pstringtext3 02E5  
             __pstringtext4 02A9               __pstringtext5 02C4               __pstringtext6 02FA  
             __pstringtext7 0000                  _OPTION_REG 0095                ?_mTouch_Init 0043  
              ?_mTouch_Scan 0075              ??_mTouch_Check 0043     mTouch_Check@DifferValue 0049  
           _TMR0_ReloadTemp 0056      __size_of_PWM_Init_Port 0013  
