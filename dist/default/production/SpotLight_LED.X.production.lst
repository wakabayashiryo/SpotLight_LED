

Microchip Technology PIC LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Sep  5 13:39:27 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	12F1822
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext1,global,class=STRCODE,delta=2
     5                           	psect	stringtext2,global,class=STRCODE,delta=2
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	dabs	1,0x7E,2
    33  0000                     
    34                           ; Version 1.43
    35                           ; Generated 25/07/2017 GMT
    36                           ; 
    37                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC12F1822 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     	;# 
    69  0001                     	;# 
    70  0002                     	;# 
    71  0003                     	;# 
    72  0004                     	;# 
    73  0005                     	;# 
    74  0006                     	;# 
    75  0007                     	;# 
    76  0008                     	;# 
    77  0009                     	;# 
    78  000A                     	;# 
    79  000B                     	;# 
    80  000C                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  008C                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009B                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  010C                     	;# 
   109  0111                     	;# 
   110  0112                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011A                     	;# 
   117  011B                     	;# 
   118  011D                     	;# 
   119  011D                     	;# 
   120  018C                     	;# 
   121  0191                     	;# 
   122  0191                     	;# 
   123  0192                     	;# 
   124  0193                     	;# 
   125  0193                     	;# 
   126  0193                     	;# 
   127  0194                     	;# 
   128  0195                     	;# 
   129  0196                     	;# 
   130  0199                     	;# 
   131  019A                     	;# 
   132  019B                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019C                     	;# 
   137  019C                     	;# 
   138  019D                     	;# 
   139  019E                     	;# 
   140  019F                     	;# 
   141  020C                     	;# 
   142  0211                     	;# 
   143  0211                     	;# 
   144  0212                     	;# 
   145  0212                     	;# 
   146  0213                     	;# 
   147  0213                     	;# 
   148  0214                     	;# 
   149  0214                     	;# 
   150  0215                     	;# 
   151  0215                     	;# 
   152  0215                     	;# 
   153  0216                     	;# 
   154  0216                     	;# 
   155  0217                     	;# 
   156  0217                     	;# 
   157  0291                     	;# 
   158  0291                     	;# 
   159  0292                     	;# 
   160  0293                     	;# 
   161  0294                     	;# 
   162  0295                     	;# 
   163  0295                     	;# 
   164  0296                     	;# 
   165  0391                     	;# 
   166  0392                     	;# 
   167  0393                     	;# 
   168  039A                     	;# 
   169  039C                     	;# 
   170  039D                     	;# 
   171  039E                     	;# 
   172  039F                     	;# 
   173  0FE4                     	;# 
   174  0FE5                     	;# 
   175  0FE6                     	;# 
   176  0FE7                     	;# 
   177  0FE8                     	;# 
   178  0FE9                     	;# 
   179  0FEA                     	;# 
   180  0FEB                     	;# 
   181  0FED                     	;# 
   182  0FEE                     	;# 
   183  0FEF                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  008C                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009B                     	;# 
   221  009C                     	;# 
   222  009D                     	;# 
   223  009E                     	;# 
   224  010C                     	;# 
   225  0111                     	;# 
   226  0112                     	;# 
   227  0115                     	;# 
   228  0116                     	;# 
   229  0117                     	;# 
   230  0118                     	;# 
   231  0119                     	;# 
   232  011A                     	;# 
   233  011B                     	;# 
   234  011D                     	;# 
   235  011D                     	;# 
   236  018C                     	;# 
   237  0191                     	;# 
   238  0191                     	;# 
   239  0192                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0193                     	;# 
   243  0194                     	;# 
   244  0195                     	;# 
   245  0196                     	;# 
   246  0199                     	;# 
   247  019A                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019C                     	;# 
   253  019C                     	;# 
   254  019D                     	;# 
   255  019E                     	;# 
   256  019F                     	;# 
   257  020C                     	;# 
   258  0211                     	;# 
   259  0211                     	;# 
   260  0212                     	;# 
   261  0212                     	;# 
   262  0213                     	;# 
   263  0213                     	;# 
   264  0214                     	;# 
   265  0214                     	;# 
   266  0215                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0216                     	;# 
   270  0216                     	;# 
   271  0217                     	;# 
   272  0217                     	;# 
   273  0291                     	;# 
   274  0291                     	;# 
   275  0292                     	;# 
   276  0293                     	;# 
   277  0294                     	;# 
   278  0295                     	;# 
   279  0295                     	;# 
   280  0296                     	;# 
   281  0391                     	;# 
   282  0392                     	;# 
   283  0393                     	;# 
   284  039A                     	;# 
   285  039C                     	;# 
   286  039D                     	;# 
   287  039E                     	;# 
   288  039F                     	;# 
   289  0FE4                     	;# 
   290  0FE5                     	;# 
   291  0FE6                     	;# 
   292  0FE7                     	;# 
   293  0FE8                     	;# 
   294  0FE9                     	;# 
   295  0FEA                     	;# 
   296  0FEB                     	;# 
   297  0FED                     	;# 
   298  0FEE                     	;# 
   299  0FEF                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001E                     	;# 
   325  001F                     	;# 
   326  008C                     	;# 
   327  0091                     	;# 
   328  0092                     	;# 
   329  0095                     	;# 
   330  0096                     	;# 
   331  0097                     	;# 
   332  0098                     	;# 
   333  0099                     	;# 
   334  009A                     	;# 
   335  009B                     	;# 
   336  009B                     	;# 
   337  009C                     	;# 
   338  009D                     	;# 
   339  009E                     	;# 
   340  010C                     	;# 
   341  0111                     	;# 
   342  0112                     	;# 
   343  0115                     	;# 
   344  0116                     	;# 
   345  0117                     	;# 
   346  0118                     	;# 
   347  0119                     	;# 
   348  011A                     	;# 
   349  011B                     	;# 
   350  011D                     	;# 
   351  011D                     	;# 
   352  018C                     	;# 
   353  0191                     	;# 
   354  0191                     	;# 
   355  0192                     	;# 
   356  0193                     	;# 
   357  0193                     	;# 
   358  0193                     	;# 
   359  0194                     	;# 
   360  0195                     	;# 
   361  0196                     	;# 
   362  0199                     	;# 
   363  019A                     	;# 
   364  019B                     	;# 
   365  019B                     	;# 
   366  019B                     	;# 
   367  019B                     	;# 
   368  019C                     	;# 
   369  019C                     	;# 
   370  019D                     	;# 
   371  019E                     	;# 
   372  019F                     	;# 
   373  020C                     	;# 
   374  0211                     	;# 
   375  0211                     	;# 
   376  0212                     	;# 
   377  0212                     	;# 
   378  0213                     	;# 
   379  0213                     	;# 
   380  0214                     	;# 
   381  0214                     	;# 
   382  0215                     	;# 
   383  0215                     	;# 
   384  0215                     	;# 
   385  0216                     	;# 
   386  0216                     	;# 
   387  0217                     	;# 
   388  0217                     	;# 
   389  0291                     	;# 
   390  0291                     	;# 
   391  0292                     	;# 
   392  0293                     	;# 
   393  0294                     	;# 
   394  0295                     	;# 
   395  0295                     	;# 
   396  0296                     	;# 
   397  0391                     	;# 
   398  0392                     	;# 
   399  0393                     	;# 
   400  039A                     	;# 
   401  039C                     	;# 
   402  039D                     	;# 
   403  039E                     	;# 
   404  039F                     	;# 
   405  0FE4                     	;# 
   406  0FE5                     	;# 
   407  0FE6                     	;# 
   408  0FE7                     	;# 
   409  0FE8                     	;# 
   410  0FE9                     	;# 
   411  0FEA                     	;# 
   412  0FEB                     	;# 
   413  0FED                     	;# 
   414  0FEE                     	;# 
   415  0FEF                     	;# 
   416  0000                     	;# 
   417  0001                     	;# 
   418  0002                     	;# 
   419  0003                     	;# 
   420  0004                     	;# 
   421  0005                     	;# 
   422  0006                     	;# 
   423  0007                     	;# 
   424  0008                     	;# 
   425  0009                     	;# 
   426  000A                     	;# 
   427  000B                     	;# 
   428  000C                     	;# 
   429  0011                     	;# 
   430  0012                     	;# 
   431  0015                     	;# 
   432  0016                     	;# 
   433  0016                     	;# 
   434  0017                     	;# 
   435  0018                     	;# 
   436  0019                     	;# 
   437  001A                     	;# 
   438  001B                     	;# 
   439  001C                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  008C                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  010C                     	;# 
   457  0111                     	;# 
   458  0112                     	;# 
   459  0115                     	;# 
   460  0116                     	;# 
   461  0117                     	;# 
   462  0118                     	;# 
   463  0119                     	;# 
   464  011A                     	;# 
   465  011B                     	;# 
   466  011D                     	;# 
   467  011D                     	;# 
   468  018C                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0193                     	;# 
   475  0194                     	;# 
   476  0195                     	;# 
   477  0196                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020C                     	;# 
   490  0211                     	;# 
   491  0211                     	;# 
   492  0212                     	;# 
   493  0212                     	;# 
   494  0213                     	;# 
   495  0213                     	;# 
   496  0214                     	;# 
   497  0214                     	;# 
   498  0215                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0216                     	;# 
   502  0216                     	;# 
   503  0217                     	;# 
   504  0217                     	;# 
   505  0291                     	;# 
   506  0291                     	;# 
   507  0292                     	;# 
   508  0293                     	;# 
   509  0294                     	;# 
   510  0295                     	;# 
   511  0295                     	;# 
   512  0296                     	;# 
   513  0391                     	;# 
   514  0392                     	;# 
   515  0393                     	;# 
   516  039A                     	;# 
   517  039C                     	;# 
   518  039D                     	;# 
   519  039E                     	;# 
   520  039F                     	;# 
   521  0FE4                     	;# 
   522  0FE5                     	;# 
   523  0FE6                     	;# 
   524  0FE7                     	;# 
   525  0FE8                     	;# 
   526  0FE9                     	;# 
   527  0FEA                     	;# 
   528  0FEB                     	;# 
   529  0FED                     	;# 
   530  0FEE                     	;# 
   531  0FEF                     	;# 
   532  0000                     	;# 
   533  0001                     	;# 
   534  0002                     	;# 
   535  0003                     	;# 
   536  0004                     	;# 
   537  0005                     	;# 
   538  0006                     	;# 
   539  0007                     	;# 
   540  0008                     	;# 
   541  0009                     	;# 
   542  000A                     	;# 
   543  000B                     	;# 
   544  000C                     	;# 
   545  0011                     	;# 
   546  0012                     	;# 
   547  0015                     	;# 
   548  0016                     	;# 
   549  0016                     	;# 
   550  0017                     	;# 
   551  0018                     	;# 
   552  0019                     	;# 
   553  001A                     	;# 
   554  001B                     	;# 
   555  001C                     	;# 
   556  001E                     	;# 
   557  001F                     	;# 
   558  008C                     	;# 
   559  0091                     	;# 
   560  0092                     	;# 
   561  0095                     	;# 
   562  0096                     	;# 
   563  0097                     	;# 
   564  0098                     	;# 
   565  0099                     	;# 
   566  009A                     	;# 
   567  009B                     	;# 
   568  009B                     	;# 
   569  009C                     	;# 
   570  009D                     	;# 
   571  009E                     	;# 
   572  010C                     	;# 
   573  0111                     	;# 
   574  0112                     	;# 
   575  0115                     	;# 
   576  0116                     	;# 
   577  0117                     	;# 
   578  0118                     	;# 
   579  0119                     	;# 
   580  011A                     	;# 
   581  011B                     	;# 
   582  011D                     	;# 
   583  011D                     	;# 
   584  018C                     	;# 
   585  0191                     	;# 
   586  0191                     	;# 
   587  0192                     	;# 
   588  0193                     	;# 
   589  0193                     	;# 
   590  0193                     	;# 
   591  0194                     	;# 
   592  0195                     	;# 
   593  0196                     	;# 
   594  0199                     	;# 
   595  019A                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019B                     	;# 
   599  019B                     	;# 
   600  019C                     	;# 
   601  019C                     	;# 
   602  019D                     	;# 
   603  019E                     	;# 
   604  019F                     	;# 
   605  020C                     	;# 
   606  0211                     	;# 
   607  0211                     	;# 
   608  0212                     	;# 
   609  0212                     	;# 
   610  0213                     	;# 
   611  0213                     	;# 
   612  0214                     	;# 
   613  0214                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0215                     	;# 
   617  0216                     	;# 
   618  0216                     	;# 
   619  0217                     	;# 
   620  0217                     	;# 
   621  0291                     	;# 
   622  0291                     	;# 
   623  0292                     	;# 
   624  0293                     	;# 
   625  0294                     	;# 
   626  0295                     	;# 
   627  0295                     	;# 
   628  0296                     	;# 
   629  0391                     	;# 
   630  0392                     	;# 
   631  0393                     	;# 
   632  039A                     	;# 
   633  039C                     	;# 
   634  039D                     	;# 
   635  039E                     	;# 
   636  039F                     	;# 
   637  0FE4                     	;# 
   638  0FE5                     	;# 
   639  0FE6                     	;# 
   640  0FE7                     	;# 
   641  0FE8                     	;# 
   642  0FE9                     	;# 
   643  0FEA                     	;# 
   644  0FEB                     	;# 
   645  0FED                     	;# 
   646  0FEE                     	;# 
   647  0FEF                     	;# 
   648                           
   649                           	psect	stringtext1
   650  023D                     __pstringtext1:	
   651  023D                     _baudtable:	
   652  023D  340A               	retlw	10
   653  023E  341A               	retlw	26
   654  023F  3404               	retlw	4
   655  0240  340D               	retlw	13
   656  0241  3440               	retlw	64
   657  0242  3403               	retlw	3
   658  0243  34CF               	retlw	207
   659  0244  3400               	retlw	0
   660  0245  34BF               	retlw	191
   661  0246  3400               	retlw	0
   662  0247  3467               	retlw	103
   663  0248  3400               	retlw	0
   664  0249  3422               	retlw	34
   665  024A  3400               	retlw	0
   666  024B  3410               	retlw	16
   667  024C  3400               	retlw	0
   668  024D                     __end_of_baudtable:	
   669                           
   670                           	psect	stringtext2
   671  028E                     __pstringtext2:	
   672  028E                     _dpowers:	
   673  028E  3401               	retlw	1
   674  028F  3400               	retlw	0
   675  0290  340A               	retlw	10
   676  0291  3400               	retlw	0
   677  0292  3464               	retlw	100
   678  0293  3400               	retlw	0
   679  0294  34E8               	retlw	232
   680  0295  3403               	retlw	3
   681  0296  3410               	retlw	16
   682  0297  3427               	retlw	39
   683  0298                     __end_of_dpowers:	
   684                           
   685                           	psect	nvBANK0
   686  0054                     __pnvBANK0:	
   687  0054                     _TMR0_ReloadTemp:	
   688  0054                     	ds	1
   689  0016                     _TMR1	set	22
   690  001F                     _CPSCON1	set	31
   691  001E                     _CPSCON0	set	30
   692  0019                     _T1GCON	set	25
   693  0018                     _T1CON	set	24
   694  001C                     _T2CON	set	28
   695  001A                     _TMR2	set	26
   696  001B                     _PR2	set	27
   697  0015                     _TMR0	set	21
   698  000C                     _PORTA	set	12
   699  008C                     _TXIF	set	140
   700  008D                     _RCIF	set	141
   701  005F                     _GIE	set	95
   702  005E                     _PEIE	set	94
   703  005D                     _TMR0IE	set	93
   704  005A                     _TMR0IF	set	90
   705  0095                     _OPTION_REG	set	149
   706  008C                     _TRISA	set	140
   707  0099                     _OSCCON	set	153
   708  048D                     _RCIE	set	1165
   709  011D                     _APFCON	set	285
   710  0865                     _LATA5	set	2149
   711  0199                     _RCREG	set	409
   712  019A                     _TXREG	set	410
   713  019C                     _SPBRGH	set	412
   714  019B                     _SPBRGL	set	411
   715  019D                     _RCSTA	set	413
   716  019E                     _TXSTA	set	414
   717  018C                     _ANSELA	set	396
   718  0CEC                     _CREN	set	3308
   719  0CE9                     _OERR	set	3305
   720  0CEF                     _SPEN	set	3311
   721  0CFB                     _BRG16	set	3323
   722  020C                     _WPUA	set	524
   723  0291                     _CCPR1L	set	657
   724  0293                     _CCP1CON	set	659
   725                           
   726                           	psect	stringtext3
   727  025C                     __pstringtext3:	
   728  025C                     STR_2:	
   729  025C  3444               	retlw	68	;'D'
   730  025D  3469               	retlw	105	;'i'
   731  025E  3466               	retlw	102	;'f'
   732  025F  3466               	retlw	102	;'f'
   733  0260  343D               	retlw	61	;'='
   734  0261  3425               	retlw	37	;'%'
   735  0262  3430               	retlw	48	;'0'
   736  0263  3430               	retlw	48	;'0'
   737  0264  3430               	retlw	48	;'0'
   738  0265  3430               	retlw	48	;'0'
   739  0266  3430               	retlw	48	;'0'
   740  0267  3435               	retlw	53	;'5'
   741  0268  3464               	retlw	100	;'d'
   742  0269  3400               	retlw	0
   743                           
   744                           	psect	stringtext4
   745  0277                     __pstringtext4:	
   746  0277                     STR_1:	
   747  0277  3443               	retlw	67	;'C'
   748  0278  3468               	retlw	104	;'h'
   749  0279  3461               	retlw	97	;'a'
   750  027A  346E               	retlw	110	;'n'
   751  027B  346E               	retlw	110	;'n'
   752  027C  3465               	retlw	101	;'e'
   753  027D  346C               	retlw	108	;'l'
   754  027E  343A               	retlw	58	;':'
   755  027F  3425               	retlw	37	;'%'
   756  0280  3464               	retlw	100	;'d'
   757  0281  3420               	retlw	32	;' '
   758  0282  3400               	retlw	0
   759                           
   760                           	psect	stringtext5
   761  02A3                     __pstringtext5:	
   762  02A3                     STR_3:	
   763  02A3  340A               	retlw	10
   764  02A4  3400               	retlw	0
   765                           
   766                           	psect	stringtext6
   767  0000                     __pstringtext6:	
   768                           
   769                           ; #config settings
   770  0000                     
   771                           	psect	cinit
   772  0024                     start_initialization:	
   773  0024                     __initialization:	
   774                           
   775                           ; Clear objects allocated to COMMON
   776  0024  01F0               	clrf	__pbssCOMMON& (0+127)
   777  0025  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   778  0026  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   779  0027  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   780  0028  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   781                           
   782                           ; Clear objects allocated to BANK0
   783  0029  3020               	movlw	low __pbssBANK0
   784  002A  0084               	movwf	4
   785  002B  3000               	movlw	high __pbssBANK0
   786  002C  0085               	movwf	5
   787  002D  3022               	movlw	34
   788  002E  2298               	fcall	clear_ram0
   789  002F                     end_of_initialization:	
   790                           ;End of C runtime variable initialization code
   791                           
   792  002F                     __end_of__initialization:	
   793  002F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   794  0030  0020               	movlb	0
   795  0031  28FC               	ljmp	_main	;jump to C main() function
   796                           
   797                           	psect	bssCOMMON
   798  0070                     __pbssCOMMON:	
   799  0070                     mTouch_Scan@elements:	
   800  0070                     	ds	1
   801  0071                     _using_channel:	
   802  0071                     	ds	1
   803  0072                     _config_ptr:	
   804  0072                     	ds	1
   805  0073                     _UART_Buffer_outptr:	
   806  0073                     	ds	1
   807  0074                     _UART_Buffer_inptr:	
   808  0074                     	ds	1
   809                           
   810                           	psect	bssBANK0
   811  0020                     __pbssBANK0:	
   812  0020                     _UART_Buffer:	
   813  0020                     	ds	32
   814  0040                     Handler@Interval:	
   815  0040                     	ds	2
   816                           
   817                           	psect	clrtext
   818  0298                     clear_ram0:	
   819                           ;	Called with FSR0 containing the base address, and
   820                           ;	WREG with the size to clear
   821                           
   822  0298  0064               	clrwdt	;clear the watchdog before getting into this loop
   823  0299                     clrloop0:	
   824  0299  0180               	clrf	0	;clear RAM location pointed to by FSR
   825  029A  3101               	addfsr 0,1
   826  029B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   827  029C  2A99               	goto	clrloop0	;have we reached the end yet?
   828  029D  3400               	retlw	0	;all done for this memory range, return
   829                           
   830                           	psect	cstackCOMMON
   831  0075                     __pcstackCOMMON:	
   832  0075                     ?_Basic_Init:	
   833  0075                     ?_PWM_Init_Port:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0075                     ?_mTouch_Init_Port:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0075                     ?_UART_Init_Port:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0075                     ?_mTouch_Check:	
   843                           ; 1 bytes @ 0x0
   844                           
   845  0075                     ?_Timer0_CheckFlag:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  0075                     ??_Timer0_CheckFlag:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  0075                     ?_mTouch_Count1ms:	
   852                           ; 1 bytes @ 0x0
   853                           
   854  0075                     ??_mTouch_Count1ms:	
   855                           ; 1 bytes @ 0x0
   856                           
   857  0075                     ?_mTouch_Scan:	
   858                           ; 1 bytes @ 0x0
   859                           
   860  0075                     ??_mTouch_Scan:	
   861                           ; 1 bytes @ 0x0
   862                           
   863  0075                     ?_UART_Interrupt:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  0075                     ??_UART_Interrupt:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  0075                     ?_main:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  0075                     ?_Handler:	
   873                           ; 1 bytes @ 0x0
   874                           
   875                           
   876                           ; 1 bytes @ 0x0
   877  0075                     	ds	1
   878  0076                     UART_Interrupt@dt:	
   879                           
   880                           ; 1 bytes @ 0x1
   881  0076                     	ds	1
   882  0077                     UART_Interrupt@x:	
   883  0077                     mTouch_Count1ms@elements:	
   884                           ; 1 bytes @ 0x2
   885                           
   886                           
   887                           ; 1 bytes @ 0x2
   888  0077                     	ds	2
   889  0079                     ??_Handler:	
   890                           
   891                           ; 1 bytes @ 0x4
   892  0079                     	ds	1
   893                           
   894                           	psect	cstackBANK0
   895  0042                     __pcstackBANK0:	
   896  0042                     ??_Basic_Init:	
   897  0042                     ?_Timer0_Init:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  0042                     ??_PWM_Init_Port:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0042                     ?_mTouch_Init:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0042                     ??_mTouch_Init_Port:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0042                     ??_UART_Init_Port:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0042                     ??_mTouch_Check:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0042                     Timer0_Init@reload_val:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0042                     mTouch_Init@mTouch_PortInit:	
   919                           ; 1 bytes @ 0x0
   920                           
   921                           
   922                           ; 2 bytes @ 0x0
   923  0042                     	ds	1
   924  0043                     ??_Timer0_Init:	
   925  0043                     ?_PWM_Init:	
   926                           ; 1 bytes @ 0x1
   927                           
   928  0043                     ?_UART_Init:	
   929                           ; 1 bytes @ 0x1
   930                           
   931  0043                     UART_Init@UART_Init_PORT:	
   932                           ; 1 bytes @ 0x1
   933                           
   934  0043                     PWM_Init@PMW_Init_PORT:	
   935                           ; 2 bytes @ 0x1
   936                           
   937                           
   938                           ; 2 bytes @ 0x1
   939  0043                     	ds	1
   940  0044                     Timer0_Init@pre_val:	
   941  0044                     mTouch_Init@cps_config:	
   942                           ; 1 bytes @ 0x2
   943                           
   944                           
   945                           ; 1 bytes @ 0x2
   946  0044                     	ds	1
   947  0045                     UART_Init@brg:	
   948  0045                     PWM_Init@pre_val:	
   949                           ; 1 bytes @ 0x3
   950                           
   951  0045                     mTouch_Init@num_of_channel:	
   952                           ; 1 bytes @ 0x3
   953                           
   954                           
   955                           ; 1 bytes @ 0x3
   956  0045                     	ds	1
   957  0046                     ??_mTouch_Init:	
   958  0046                     ??_UART_Init:	
   959                           ; 1 bytes @ 0x4
   960                           
   961  0046                     PWM_Init@period:	
   962                           ; 1 bytes @ 0x4
   963                           
   964                           
   965                           ; 1 bytes @ 0x4
   966  0046                     	ds	1
   967  0047                     ??_PWM_Init:	
   968                           
   969                           ; 1 bytes @ 0x5
   970  0047                     	ds	1
   971  0048                     mTouch_Check@DifferValue:	
   972                           
   973                           ; 2 bytes @ 0x6
   974  0048                     	ds	2
   975  004A                     mTouch_Check@elements:	
   976                           
   977                           ; 1 bytes @ 0x8
   978  004A                     	ds	1
   979  004B                     ??_main:	
   980                           
   981                           ; 1 bytes @ 0x9
   982  004B                     	ds	1
   983  004C                     main@cps_conf:	
   984                           
   985                           ; 8 bytes @ 0xA
   986  004C                     	ds	8
   987                           
   988                           	psect	maintext
   989  00FC                     __pmaintext:	
   990 ;;
   991 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   992 ;;
   993 ;; *************** function _main *****************
   994 ;; Defined at:
   995 ;;		line 16 in file "main.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;		None
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  cps_conf        8   10[BANK0 ] struct .[1]
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1004 ;; Tracked objects:
  1005 ;;		On entry : B1F/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1
  1009 ;;      Params:         0       0       0
  1010 ;;      Locals:         0       8       0
  1011 ;;      Temps:          0       1       0
  1012 ;;      Totals:         0       9       0
  1013 ;;Total ram usage:        9 bytes
  1014 ;; Hardware stack levels required when called:    4
  1015 ;; This function calls:
  1016 ;;		_Basic_Init
  1017 ;;		_PWM_Init
  1018 ;;		_Timer0_Init
  1019 ;;		_UART_Init
  1020 ;;		_mTouch_Check
  1021 ;;		_mTouch_Init
  1022 ;; This function is called by:
  1023 ;;		Startup code after reset
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function _main
  1029  00FC                     _main:	
  1030                           
  1031                           ;main.c: 18: Basic_Init();
  1032                           
  1033                           ;incstack = 0
  1034                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1035  00FC  226A               	fcall	_Basic_Init
  1036                           
  1037                           ;main.c: 20: Timer0_Init(TMR0_PRESCALER64,125);
  1038  00FD  307D               	movlw	125
  1039  00FE  0020               	movlb	0	; select bank0
  1040  00FF  00CB               	movwf	??_main
  1041  0100  084B               	movf	??_main,w
  1042  0101  00C2               	movwf	Timer0_Init@reload_val
  1043  0102  3005               	movlw	5
  1044  0103  21C5               	fcall	_Timer0_Init
  1045                           
  1046                           ;main.c: 22: PWM_Init(PWM_Init_Port,TMR2_PRESCALER4,0xFF);
  1047  0104  302A               	movlw	low _PWM_Init_Port
  1048  0105  0020               	movlb	0	; select bank0
  1049  0106  00C3               	movwf	PWM_Init@PMW_Init_PORT
  1050  0107  3002               	movlw	high _PWM_Init_Port
  1051  0108  00C4               	movwf	PWM_Init@PMW_Init_PORT+1
  1052  0109  01C5               	clrf	PWM_Init@pre_val
  1053  010A  0AC5               	incf	PWM_Init@pre_val,f
  1054  010B  30FF               	movlw	255
  1055  010C  00CB               	movwf	??_main
  1056  010D  084B               	movf	??_main,w
  1057  010E  00C6               	movwf	PWM_Init@period
  1058  010F  2213               	fcall	_PWM_Init
  1059                           
  1060                           ;main.c: 23: CCP1CON |= (3<<2);;
  1061  0110  300C               	movlw	12
  1062  0111  0020               	movlb	0	; select bank0
  1063  0112  00CB               	movwf	??_main
  1064  0113  084B               	movf	??_main,w
  1065  0114  0025               	movlb	5	; select bank5
  1066  0115  0493               	iorwf	19,f	;volatile
  1067                           
  1068                           ;main.c: 25: CPS_CHANNELCONFIG cps_conf[1];
  1069                           ;main.c: 26: cps_conf[0].CPS_Channel = 0;
  1070  0116  0020               	movlb	0	; select bank0
  1071  0117  01CC               	clrf	main@cps_conf
  1072                           
  1073                           ;main.c: 27: cps_conf[0].Threshould_Diff = 1000;
  1074  0118  30E8               	movlw	232
  1075  0119  00CD               	movwf	main@cps_conf+1
  1076  011A  3003               	movlw	3
  1077  011B  00CE               	movwf	main@cps_conf+2
  1078                           
  1079                           ;main.c: 28: mTouch_Init(mTouch_Init_Port,cps_conf,1);
  1080  011C  309E               	movlw	low _mTouch_Init_Port
  1081  011D  00C2               	movwf	mTouch_Init@mTouch_PortInit
  1082  011E  3002               	movlw	high _mTouch_Init_Port
  1083  011F  00C3               	movwf	mTouch_Init@mTouch_PortInit+1
  1084  0120  304C               	movlw	(low (main@cps_conf| 0))& (0+255)
  1085  0121  00CB               	movwf	??_main
  1086  0122  084B               	movf	??_main,w
  1087  0123  00C4               	movwf	mTouch_Init@cps_config
  1088  0124  01C5               	clrf	mTouch_Init@num_of_channel
  1089  0125  0AC5               	incf	mTouch_Init@num_of_channel,f
  1090  0126  219D               	fcall	_mTouch_Init
  1091                           
  1092                           ;main.c: 30: UART_Init(UART_Init_Port,BAUD_9600);
  1093  0127  304D               	movlw	low _UART_Init_Port
  1094  0128  0020               	movlb	0	; select bank0
  1095  0129  00C3               	movwf	UART_Init@UART_Init_PORT
  1096  012A  3002               	movlw	high _UART_Init_Port
  1097  012B  00C4               	movwf	UART_Init@UART_Init_PORT+1
  1098  012C  3003               	movlw	3
  1099  012D  00CB               	movwf	??_main
  1100  012E  084B               	movf	??_main,w
  1101  012F  00C5               	movwf	UART_Init@brg
  1102  0130  2139               	fcall	_UART_Init
  1103  0131                     l1529:	
  1104                           ;main.c: 32: while(1)
  1105                           
  1106                           
  1107                           ;main.c: 33: {
  1108                           ;main.c: 35: if(mTouch_Check(0))
  1109  0131  3000               	movlw	0
  1110  0132  2032               	fcall	_mTouch_Check
  1111  0133  3A00               	xorlw	0
  1112  0134  1903               	skipnz
  1113  0135  2931               	goto	l1529
  1114                           
  1115                           ;main.c: 36: LATA5 = 1;;
  1116  0136  0022               	movlb	2	; select bank2
  1117  0137  168C               	bsf	12,5	;volatile
  1118  0138  2931               	goto	l1529
  1119  0139                     __end_of_main:	
  1120                           
  1121                           	psect	text1
  1122  019D                     __ptext1:	
  1123 ;; *************** function _mTouch_Init *****************
  1124 ;; Defined at:
  1125 ;;		line 6 in file "PIC_mTouch.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  mTouch_PortI    2    0[BANK0 ] PTR FTN()void 
  1128 ;;		 -> mTouch_Init_Port(1), 
  1129 ;;  cps_config      1    2[BANK0 ] PTR struct .
  1130 ;;		 -> main@cps_conf(8), 
  1131 ;;  num_of_chann    1    3[BANK0 ] unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, pclath, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1
  1143 ;;      Params:         0       4       0
  1144 ;;      Locals:         0       0       0
  1145 ;;      Temps:          0       1       0
  1146 ;;      Totals:         0       5       0
  1147 ;;Total ram usage:        5 bytes
  1148 ;; Hardware stack levels used:    1
  1149 ;; Hardware stack levels required when called:    3
  1150 ;; This function calls:
  1151 ;;		_mTouch_Init_Port
  1152 ;; This function is called by:
  1153 ;;		_main
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           
  1158                           ;psect for function _mTouch_Init
  1159  019D                     _mTouch_Init:	
  1160                           
  1161                           ;PIC_mTouch.c: 8: mTouch_PortInit();
  1162                           
  1163                           ;incstack = 0
  1164                           ; Regs used in _mTouch_Init: [wreg+status,2+status,0+pclath+cstack]
  1165  019D  0020               	movlb	0	; select bank0
  1166  019E  0843               	movf	mTouch_Init@mTouch_PortInit+1,w
  1167  019F  008A               	movwf	10
  1168  01A0  0842               	movf	mTouch_Init@mTouch_PortInit,w
  1169  01A1  000A               	callw
  1170  01A2  3181               	pagesel	$
  1171                           
  1172                           ;PIC_mTouch.c: 10: config_ptr = cps_config;
  1173  01A3  0020               	movlb	0	; select bank0
  1174  01A4  0844               	movf	mTouch_Init@cps_config,w
  1175  01A5  00C6               	movwf	??_mTouch_Init
  1176  01A6  0846               	movf	??_mTouch_Init,w
  1177  01A7  00F2               	movwf	_config_ptr
  1178                           
  1179                           ;PIC_mTouch.c: 11: using_channel = num_of_channel;
  1180  01A8  0845               	movf	mTouch_Init@num_of_channel,w
  1181  01A9  00C6               	movwf	??_mTouch_Init
  1182  01AA  0846               	movf	??_mTouch_Init,w
  1183  01AB  00F1               	movwf	_using_channel
  1184                           
  1185                           ;PIC_mTouch.c: 14: T1CON |= (0x01<<2);
  1186  01AC  1518               	bsf	24,2	;volatile
  1187                           
  1188                           ;PIC_mTouch.c: 15: T1CON &= ~(0x01<<3);
  1189  01AD  30F7               	movlw	247
  1190  01AE  00C6               	movwf	??_mTouch_Init
  1191  01AF  0846               	movf	??_mTouch_Init,w
  1192  01B0  0598               	andwf	24,f	;volatile
  1193                           
  1194                           ;PIC_mTouch.c: 16: T1CON |= (0x00<<4);
  1195  01B1  0818               	movf	24,w	;volatile
  1196                           
  1197                           ;PIC_mTouch.c: 17: T1CON |= (0x03<<6);
  1198  01B2  30C0               	movlw	192
  1199  01B3  00C6               	movwf	??_mTouch_Init
  1200  01B4  0846               	movf	??_mTouch_Init,w
  1201  01B5  0498               	iorwf	24,f	;volatile
  1202                           
  1203                           ;PIC_mTouch.c: 19: T1GCON = 0x00;
  1204  01B6  0199               	clrf	25	;volatile
  1205                           
  1206                           ;PIC_mTouch.c: 21: TMR1 = 0x0000;
  1207  01B7  0196               	clrf	22	;volatile
  1208  01B8  0197               	clrf	23	;volatile
  1209                           
  1210                           ;PIC_mTouch.c: 24: CPSCON0 |= (0x03<<2);
  1211  01B9  300C               	movlw	12
  1212  01BA  00C6               	movwf	??_mTouch_Init
  1213  01BB  0846               	movf	??_mTouch_Init,w
  1214  01BC  049E               	iorwf	30,f	;volatile
  1215                           
  1216                           ;PIC_mTouch.c: 25: CPSCON0 |= (0x00<<6);
  1217  01BD  081E               	movf	30,w	;volatile
  1218                           
  1219                           ;PIC_mTouch.c: 26: CPSCON0 &= ~(0x01<<7);;
  1220  01BE  307F               	movlw	127
  1221  01BF  00C6               	movwf	??_mTouch_Init
  1222  01C0  0846               	movf	??_mTouch_Init,w
  1223  01C1  059E               	andwf	30,f	;volatile
  1224                           
  1225                           ;PIC_mTouch.c: 27: CPSCON1 = (uint8_t)0x00;
  1226  01C2  019F               	clrf	31	;volatile
  1227                           
  1228                           ;PIC_mTouch.c: 29: T1CON |= (0x01<<0);
  1229  01C3  1418               	bsf	24,0	;volatile
  1230  01C4  0008               	return
  1231  01C5                     __end_of_mTouch_Init:	
  1232                           
  1233                           	psect	text2
  1234  029E                     __ptext2:	
  1235 ;; *************** function _mTouch_Init_Port *****************
  1236 ;; Defined at:
  1237 ;;		line 95 in file "main.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		None
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1
  1251 ;;      Params:         0       0       0
  1252 ;;      Locals:         0       0       0
  1253 ;;      Temps:          0       0       0
  1254 ;;      Totals:         0       0       0
  1255 ;;Total ram usage:        0 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    2
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_main
  1262 ;;		_mTouch_Init
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _mTouch_Init_Port
  1268  029E                     _mTouch_Init_Port:	
  1269                           
  1270                           ;main.c: 97: TRISA |= (1<<0);
  1271                           
  1272                           ;incstack = 0
  1273                           ; Regs used in _mTouch_Init_Port: []
  1274  029E  0021               	movlb	1	; select bank1
  1275  029F  140C               	bsf	12,0	;volatile
  1276                           
  1277                           ;main.c: 98: ANSELA |= (1<<0);
  1278  02A0  0023               	movlb	3	; select bank3
  1279  02A1  140C               	bsf	12,0	;volatile
  1280  02A2  0008               	return
  1281  02A3                     __end_of_mTouch_Init_Port:	
  1282                           
  1283                           	psect	text3
  1284  0032                     __ptext3:	
  1285 ;; *************** function _mTouch_Check *****************
  1286 ;; Defined at:
  1287 ;;		line 60 in file "PIC_mTouch.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  elements        1    wreg     unsigned char 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;  elements        1    8[BANK0 ] unsigned char 
  1292 ;;  DifferValue     2    6[BANK0 ] int 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMMON   BANK0   BANK1
  1302 ;;      Params:         0       0       0
  1303 ;;      Locals:         0       3       0
  1304 ;;      Temps:          0       6       0
  1305 ;;      Totals:         0       9       0
  1306 ;;Total ram usage:        9 bytes
  1307 ;; Hardware stack levels used:    1
  1308 ;; Hardware stack levels required when called:    2
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_main
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           
  1317                           ;psect for function _mTouch_Check
  1318  0032                     _mTouch_Check:	
  1319                           
  1320                           ;incstack = 0
  1321                           ; Regs used in _mTouch_Check: [wreg-fsr1h+status,2+status,0]
  1322                           ;mTouch_Check@elements stored from wreg
  1323  0032  0020               	movlb	0	; select bank0
  1324  0033  00CA               	movwf	mTouch_Check@elements
  1325                           
  1326                           ;PIC_mTouch.c: 62: if(using_channel<=elements)return 0;
  1327  0034  0871               	movf	_using_channel,w
  1328  0035  024A               	subwf	mTouch_Check@elements,w
  1329  0036  1C03               	skipc
  1330  0037  283A               	goto	l1501
  1331  0038  3000               	movlw	0
  1332  0039  0008               	return
  1333  003A                     l1501:	
  1334                           
  1335                           ;PIC_mTouch.c: 64: int16_t DifferValue = (int16_t)(config_ptr[elements].CPS_PreData-conf
      +                          ig_ptr[elements].CPS_Data);
  1336  003A  084A               	movf	mTouch_Check@elements,w
  1337  003B  00C2               	movwf	??_mTouch_Check
  1338  003C  3002               	movlw	2
  1339  003D                     u1065:	
  1340  003D  35C2               	lslf	??_mTouch_Check,f
  1341  003E  3EFF               	addlw	-1
  1342  003F  1D03               	skipz
  1343  0040  283D               	goto	u1065
  1344  0041  3542               	lslf	??_mTouch_Check,w
  1345  0042  0772               	addwf	_config_ptr,w
  1346  0043  00C3               	movwf	??_mTouch_Check+1
  1347  0044  0843               	movf	??_mTouch_Check+1,w
  1348  0045  3E05               	addlw	5
  1349  0046  0086               	movwf	6
  1350  0047  0187               	clrf	7
  1351  0048  084A               	movf	mTouch_Check@elements,w
  1352  0049  00C4               	movwf	??_mTouch_Check+2
  1353  004A  3002               	movlw	2
  1354  004B                     u1075:	
  1355  004B  35C4               	lslf	??_mTouch_Check+2,f
  1356  004C  3EFF               	addlw	-1
  1357  004D  1D03               	skipz
  1358  004E  284B               	goto	u1075
  1359  004F  3544               	lslf	??_mTouch_Check+2,w
  1360  0050  0772               	addwf	_config_ptr,w
  1361  0051  00C5               	movwf	??_mTouch_Check+3
  1362  0052  0845               	movf	??_mTouch_Check+3,w
  1363  0053  3E03               	addlw	3
  1364  0054  0084               	movwf	4
  1365  0055  0185               	clrf	5
  1366  0056  3F00               	moviw [0]fsr0
  1367  0057  00C6               	movwf	??_mTouch_Check+4
  1368  0058  3F01               	moviw [1]fsr0
  1369  0059  00C7               	movwf	??_mTouch_Check+5
  1370  005A  09C6               	comf	??_mTouch_Check+4,f
  1371  005B  09C7               	comf	??_mTouch_Check+5,f
  1372  005C  0AC6               	incf	??_mTouch_Check+4,f
  1373  005D  1903               	skipnz
  1374  005E  0AC7               	incf	??_mTouch_Check+5,f
  1375  005F  3F40               	moviw [0]fsr1
  1376  0060  0746               	addwf	??_mTouch_Check+4,w
  1377  0061  00C8               	movwf	mTouch_Check@DifferValue
  1378  0062  3F41               	moviw [1]fsr1
  1379  0063  3D47               	addwfc	??_mTouch_Check+5,w
  1380  0064  00C9               	movwf	mTouch_Check@DifferValue+1
  1381                           
  1382                           ;PIC_mTouch.c: 66: if((DifferValue>config_ptr[elements].Threshould_Diff)&&!config_ptr[el
      +                          ements].Check_Interval)
  1383  0065  084A               	movf	mTouch_Check@elements,w
  1384  0066  00C2               	movwf	??_mTouch_Check
  1385  0067  3002               	movlw	2
  1386  0068                     u1085:	
  1387  0068  35C2               	lslf	??_mTouch_Check,f
  1388  0069  3EFF               	addlw	-1
  1389  006A  1D03               	skipz
  1390  006B  2868               	goto	u1085
  1391  006C  3542               	lslf	??_mTouch_Check,w
  1392  006D  0772               	addwf	_config_ptr,w
  1393  006E  00C3               	movwf	??_mTouch_Check+1
  1394  006F  0A43               	incf	??_mTouch_Check+1,w
  1395  0070  0086               	movwf	6
  1396  0071  0187               	clrf	7
  1397  0072  3F40               	moviw [0]fsr1
  1398  0073  00C4               	movwf	??_mTouch_Check+2
  1399  0074  3F41               	moviw [1]fsr1
  1400  0075  00C5               	movwf	??_mTouch_Check+3
  1401  0076  0845               	movf	??_mTouch_Check+3,w
  1402  0077  3A80               	xorlw	128
  1403  0078  00C6               	movwf	??_mTouch_Check+4
  1404  0079  0849               	movf	mTouch_Check@DifferValue+1,w
  1405  007A  3A80               	xorlw	128
  1406  007B  0246               	subwf	??_mTouch_Check+4,w
  1407  007C  1D03               	skipz
  1408  007D  2880               	goto	u1095
  1409  007E  0848               	movf	mTouch_Check@DifferValue,w
  1410  007F  0244               	subwf	??_mTouch_Check+2,w
  1411  0080                     u1095:	
  1412  0080  1803               	skipnc
  1413  0081  28A8               	goto	l1513
  1414  0082  0020               	movlb	0	; select bank0
  1415  0083  084A               	movf	mTouch_Check@elements,w
  1416  0084  00C2               	movwf	??_mTouch_Check
  1417  0085  3002               	movlw	2
  1418  0086                     u1105:	
  1419  0086  35C2               	lslf	??_mTouch_Check,f
  1420  0087  3EFF               	addlw	-1
  1421  0088  1D03               	skipz
  1422  0089  2886               	goto	u1105
  1423  008A  3542               	lslf	??_mTouch_Check,w
  1424  008B  0772               	addwf	_config_ptr,w
  1425  008C  00C3               	movwf	??_mTouch_Check+1
  1426  008D  0843               	movf	??_mTouch_Check+1,w
  1427  008E  3E07               	addlw	7
  1428  008F  0086               	movwf	6
  1429  0090  0187               	clrf	7
  1430  0091  0801               	movf	1,w
  1431  0092  1D03               	btfss	3,2
  1432  0093  28A8               	goto	l1513
  1433                           
  1434                           ;PIC_mTouch.c: 67: {
  1435                           ;PIC_mTouch.c: 68: config_ptr[elements].Check_Interval = 100;
  1436  0094  3064               	movlw	100
  1437  0095  00C2               	movwf	??_mTouch_Check
  1438  0096  084A               	movf	mTouch_Check@elements,w
  1439  0097  00C3               	movwf	??_mTouch_Check+1
  1440  0098  3002               	movlw	2
  1441  0099                     u1125:	
  1442  0099  35C3               	lslf	??_mTouch_Check+1,f
  1443  009A  3EFF               	addlw	-1
  1444  009B  1D03               	skipz
  1445  009C  2899               	goto	u1125
  1446  009D  3543               	lslf	??_mTouch_Check+1,w
  1447  009E  0772               	addwf	_config_ptr,w
  1448  009F  00C4               	movwf	??_mTouch_Check+2
  1449  00A0  0844               	movf	??_mTouch_Check+2,w
  1450  00A1  3E07               	addlw	7
  1451  00A2  0086               	movwf	6
  1452  00A3  0187               	clrf	7
  1453  00A4  0842               	movf	??_mTouch_Check,w
  1454  00A5  0081               	movwf	1
  1455                           
  1456                           ;PIC_mTouch.c: 69: return 1;
  1457  00A6  3001               	movlw	1
  1458  00A7  0008               	return
  1459  00A8                     l1513:	
  1460                           
  1461                           ;PIC_mTouch.c: 70: }
  1462                           ;PIC_mTouch.c: 71: return 0;
  1463  00A8  3000               	movlw	0
  1464  00A9  0008               	return
  1465  00AA                     __end_of_mTouch_Check:	
  1466                           
  1467                           	psect	text4
  1468  0139                     __ptext4:	
  1469 ;; *************** function _UART_Init *****************
  1470 ;; Defined at:
  1471 ;;		line 37 in file "PIC_UART.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  UART_Init_PO    2    1[BANK0 ] PTR FTN()void 
  1474 ;;		 -> UART_Init_Port(1), 
  1475 ;;  brg             1    3[BANK0 ] enum E2328
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1
  1487 ;;      Params:         0       3       0
  1488 ;;      Locals:         0       0       0
  1489 ;;      Temps:          0       4       0
  1490 ;;      Totals:         0       7       0
  1491 ;;Total ram usage:        7 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    3
  1494 ;; This function calls:
  1495 ;;		_UART_Init_Port
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           
  1502                           ;psect for function _UART_Init
  1503  0139                     _UART_Init:	
  1504                           
  1505                           ;PIC_UART.c: 39: UART_Init_PORT();
  1506                           
  1507                           ;incstack = 0
  1508                           ; Regs used in _UART_Init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1509  0139  0020               	movlb	0	; select bank0
  1510  013A  0844               	movf	UART_Init@UART_Init_PORT+1,w
  1511  013B  008A               	movwf	10
  1512  013C  0843               	movf	UART_Init@UART_Init_PORT,w
  1513  013D  000A               	callw
  1514  013E  3181               	pagesel	$
  1515                           
  1516                           ;PIC_UART.c: 41: TXSTA = 0x20;
  1517  013F  3020               	movlw	32
  1518  0140  0023               	movlb	3	; select bank3
  1519  0141  009E               	movwf	30	;volatile
  1520                           
  1521                           ;PIC_UART.c: 42: RCSTA = 0x10;
  1522  0142  3010               	movlw	16
  1523  0143  009D               	movwf	29	;volatile
  1524                           
  1525                           ;PIC_UART.c: 44: BRG16 = 1;
  1526  0144  159F               	bsf	31,3	;volatile
  1527                           
  1528                           ;PIC_UART.c: 45: SPBRGL = baudtable[(uint8_t)brg]&0x00FF;
  1529  0145  0020               	movlb	0	; select bank0
  1530  0146  0845               	movf	UART_Init@brg,w
  1531  0147  00C6               	movwf	??_UART_Init
  1532  0148  01C7               	clrf	??_UART_Init+1
  1533  0149  35C6               	lslf	??_UART_Init,f
  1534  014A  0DC7               	rlf	??_UART_Init+1,f
  1535  014B  303D               	movlw	low (_baudtable| (0+32768))
  1536  014C  0746               	addwf	??_UART_Init,w
  1537  014D  0084               	movwf	4
  1538  014E  3082               	movlw	high (_baudtable| (0+32768))
  1539  014F  3D47               	addwfc	??_UART_Init+1,w
  1540  0150  0085               	movwf	5
  1541  0151  0800               	movf	0,w	;code access
  1542  0152  0023               	movlb	3	; select bank3
  1543  0153  009B               	movwf	27	;volatile
  1544                           
  1545                           ;PIC_UART.c: 46: SPBRGH = (baudtable[(uint8_t)brg]>>8)&0x00FF;
  1546  0154  0020               	movlb	0	; select bank0
  1547  0155  0845               	movf	UART_Init@brg,w
  1548  0156  00C6               	movwf	??_UART_Init
  1549  0157  01C7               	clrf	??_UART_Init+1
  1550  0158  35C6               	lslf	??_UART_Init,f
  1551  0159  0DC7               	rlf	??_UART_Init+1,f
  1552  015A  303D               	movlw	low (_baudtable| (0+32768))
  1553  015B  0746               	addwf	??_UART_Init,w
  1554  015C  0084               	movwf	4
  1555  015D  3082               	movlw	high (_baudtable| (0+32768))
  1556  015E  3D47               	addwfc	??_UART_Init+1,w
  1557  015F  0085               	movwf	5
  1558  0160  3F00               	moviw [0]fsr0
  1559  0161  00C8               	movwf	??_UART_Init+2
  1560  0162  3F01               	moviw [1]fsr0
  1561  0163  00C9               	movwf	??_UART_Init+3
  1562  0164  0849               	movf	??_UART_Init+3,w
  1563  0165  0023               	movlb	3	; select bank3
  1564  0166  009C               	movwf	28	;volatile
  1565                           
  1566                           ;PIC_UART.c: 48: RCIF = 0;
  1567  0167  0020               	movlb	0	; select bank0
  1568  0168  1291               	bcf	17,5	;volatile
  1569                           
  1570                           ;PIC_UART.c: 49: RCIE = 1;
  1571  0169  0021               	movlb	1	; select bank1
  1572  016A  1691               	bsf	17,5	;volatile
  1573                           
  1574                           ;PIC_UART.c: 50: PEIE = 1;
  1575  016B  170B               	bsf	11,6	;volatile
  1576                           
  1577                           ;PIC_UART.c: 51: GIE = 1;
  1578  016C  178B               	bsf	11,7	;volatile
  1579                           
  1580                           ;PIC_UART.c: 53: SPEN = 1;
  1581  016D  0023               	movlb	3	; select bank3
  1582  016E  179D               	bsf	29,7	;volatile
  1583                           
  1584                           ;PIC_UART.c: 55: UART_Buffer_inptr = 0;
  1585  016F  01F4               	clrf	_UART_Buffer_inptr
  1586                           
  1587                           ;PIC_UART.c: 56: UART_Buffer_outptr = 0;
  1588  0170  01F3               	clrf	_UART_Buffer_outptr
  1589  0171  0008               	return
  1590  0172                     __end_of_UART_Init:	
  1591                           
  1592                           	psect	text5
  1593  024D                     __ptext5:	
  1594 ;; *************** function _UART_Init_Port *****************
  1595 ;; Defined at:
  1596 ;;		line 81 in file "main.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2, status,0
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMMON   BANK0   BANK1
  1610 ;;      Params:         0       0       0
  1611 ;;      Locals:         0       0       0
  1612 ;;      Temps:          0       1       0
  1613 ;;      Totals:         0       1       0
  1614 ;;Total ram usage:        1 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:    2
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;;		_UART_Init
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           
  1626                           ;psect for function _UART_Init_Port
  1627  024D                     _UART_Init_Port:	
  1628                           
  1629                           ;main.c: 83: TRISA &= ~(1<<4);
  1630                           
  1631                           ;incstack = 0
  1632                           ; Regs used in _UART_Init_Port: [wreg+status,2+status,0]
  1633  024D  30EF               	movlw	239
  1634  024E  0020               	movlb	0	; select bank0
  1635  024F  00C2               	movwf	??_UART_Init_Port
  1636  0250  0842               	movf	??_UART_Init_Port,w
  1637  0251  0021               	movlb	1	; select bank1
  1638  0252  058C               	andwf	12,f	;volatile
  1639                           
  1640                           ;main.c: 84: ANSELA &= ~(1<<4);
  1641  0253  30EF               	movlw	239
  1642  0254  0020               	movlb	0	; select bank0
  1643  0255  00C2               	movwf	??_UART_Init_Port
  1644  0256  0842               	movf	??_UART_Init_Port,w
  1645  0257  0023               	movlb	3	; select bank3
  1646  0258  058C               	andwf	12,f	;volatile
  1647                           
  1648                           ;main.c: 85: APFCON |= (1<<2);
  1649  0259  0022               	movlb	2	; select bank2
  1650  025A  151D               	bsf	29,2	;volatile
  1651  025B  0008               	return
  1652  025C                     __end_of_UART_Init_Port:	
  1653                           
  1654                           	psect	text6
  1655  01C5                     __ptext6:	
  1656 ;; *************** function _Timer0_Init *****************
  1657 ;; Defined at:
  1658 ;;		line 5 in file "PIC_Timer0.c"
  1659 ;; Parameters:    Size  Location     Type
  1660 ;;  pre_val         1    wreg     enum E2341
  1661 ;;  reload_val      1    0[BANK0 ] unsigned char 
  1662 ;; Auto vars:     Size  Location     Type
  1663 ;;  pre_val         1    2[BANK0 ] enum E2341
  1664 ;; Return value:  Size  Location     Type
  1665 ;;                  1    wreg      void 
  1666 ;; Registers used:
  1667 ;;		wreg, status,2, status,0
  1668 ;; Tracked objects:
  1669 ;;		On entry : 0/0
  1670 ;;		On exit  : 0/0
  1671 ;;		Unchanged: 0/0
  1672 ;; Data sizes:     COMMON   BANK0   BANK1
  1673 ;;      Params:         0       1       0
  1674 ;;      Locals:         0       1       0
  1675 ;;      Temps:          0       1       0
  1676 ;;      Totals:         0       3       0
  1677 ;;Total ram usage:        3 bytes
  1678 ;; Hardware stack levels used:    1
  1679 ;; Hardware stack levels required when called:    2
  1680 ;; This function calls:
  1681 ;;		Nothing
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _Timer0_Init
  1689  01C5                     _Timer0_Init:	
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in _Timer0_Init: [wreg+status,2+status,0]
  1693                           ;Timer0_Init@pre_val stored from wreg
  1694  01C5  0020               	movlb	0	; select bank0
  1695  01C6  00C4               	movwf	Timer0_Init@pre_val
  1696                           
  1697                           ;PIC_Timer0.c: 7: OPTION_REG &= ~(1<<5);
  1698  01C7  30DF               	movlw	223
  1699  01C8  00C3               	movwf	??_Timer0_Init
  1700  01C9  0843               	movf	??_Timer0_Init,w
  1701  01CA  0021               	movlb	1	; select bank1
  1702  01CB  0595               	andwf	21,f	;volatile
  1703                           
  1704                           ;PIC_Timer0.c: 8: OPTION_REG &= ~(1<<3);
  1705  01CC  30F7               	movlw	247
  1706  01CD  0020               	movlb	0	; select bank0
  1707  01CE  00C3               	movwf	??_Timer0_Init
  1708  01CF  0843               	movf	??_Timer0_Init,w
  1709  01D0  0021               	movlb	1	; select bank1
  1710  01D1  0595               	andwf	21,f	;volatile
  1711                           
  1712                           ;PIC_Timer0.c: 9: OPTION_REG &= ~(7<<0);
  1713  01D2  30F8               	movlw	248
  1714  01D3  0020               	movlb	0	; select bank0
  1715  01D4  00C3               	movwf	??_Timer0_Init
  1716  01D5  0843               	movf	??_Timer0_Init,w
  1717  01D6  0021               	movlb	1	; select bank1
  1718  01D7  0595               	andwf	21,f	;volatile
  1719                           
  1720                           ;PIC_Timer0.c: 10: OPTION_REG |= ((uint8_t)pre_val<<0);
  1721  01D8  0020               	movlb	0	; select bank0
  1722  01D9  0844               	movf	Timer0_Init@pre_val,w
  1723  01DA  00C3               	movwf	??_Timer0_Init
  1724  01DB  0843               	movf	??_Timer0_Init,w
  1725  01DC  0021               	movlb	1	; select bank1
  1726  01DD  0495               	iorwf	21,f	;volatile
  1727                           
  1728                           ;PIC_Timer0.c: 12: TMR0_ReloadTemp = 0xFF - reload_val;
  1729  01DE  0020               	movlb	0	; select bank0
  1730  01DF  0342               	decf	Timer0_Init@reload_val,w
  1731  01E0  3AFF               	xorlw	255
  1732  01E1  3EFF               	addlw	255
  1733  01E2  00C3               	movwf	??_Timer0_Init
  1734  01E3  0843               	movf	??_Timer0_Init,w
  1735  01E4  00D4               	movwf	_TMR0_ReloadTemp
  1736                           
  1737                           ;PIC_Timer0.c: 13: TMR0 = TMR0_ReloadTemp;
  1738  01E5  0854               	movf	_TMR0_ReloadTemp,w
  1739  01E6  0095               	movwf	21	;volatile
  1740                           
  1741                           ;PIC_Timer0.c: 15: TMR0IF = 0;
  1742  01E7  110B               	bcf	11,2	;volatile
  1743                           
  1744                           ;PIC_Timer0.c: 16: TMR0IE = 1;
  1745  01E8  168B               	bsf	11,5	;volatile
  1746                           
  1747                           ;PIC_Timer0.c: 17: PEIE = 1;
  1748  01E9  170B               	bsf	11,6	;volatile
  1749                           
  1750                           ;PIC_Timer0.c: 18: GIE = 1;
  1751  01EA  178B               	bsf	11,7	;volatile
  1752  01EB  0008               	return
  1753  01EC                     __end_of_Timer0_Init:	
  1754                           
  1755                           	psect	text7
  1756  0213                     __ptext7:	
  1757 ;; *************** function _PWM_Init *****************
  1758 ;; Defined at:
  1759 ;;		line 3 in file "PIC_PWM.c"
  1760 ;; Parameters:    Size  Location     Type
  1761 ;;  PMW_Init_POR    2    1[BANK0 ] PTR FTN()void 
  1762 ;;		 -> PWM_Init_Port(1), 
  1763 ;;  pre_val         1    3[BANK0 ] enum E2341
  1764 ;;  period          1    4[BANK0 ] unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, pclath, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMMON   BANK0   BANK1
  1776 ;;      Params:         0       4       0
  1777 ;;      Locals:         0       0       0
  1778 ;;      Temps:          0       1       0
  1779 ;;      Totals:         0       5       0
  1780 ;;Total ram usage:        5 bytes
  1781 ;; Hardware stack levels used:    1
  1782 ;; Hardware stack levels required when called:    3
  1783 ;; This function calls:
  1784 ;;		_PWM_Init_Port
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           
  1791                           ;psect for function _PWM_Init
  1792  0213                     _PWM_Init:	
  1793                           
  1794                           ;PIC_PWM.c: 5: PMW_Init_PORT();
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in _PWM_Init: [wreg+status,2+status,0+pclath+cstack]
  1798  0213  0020               	movlb	0	; select bank0
  1799  0214  0844               	movf	PWM_Init@PMW_Init_PORT+1,w
  1800  0215  008A               	movwf	10
  1801  0216  0843               	movf	PWM_Init@PMW_Init_PORT,w
  1802  0217  000A               	callw
  1803  0218  3182               	pagesel	$
  1804                           
  1805                           ;PIC_PWM.c: 7: PR2 = period;
  1806  0219  0020               	movlb	0	; select bank0
  1807  021A  0846               	movf	PWM_Init@period,w
  1808  021B  009B               	movwf	27	;volatile
  1809                           
  1810                           ;PIC_PWM.c: 8: TMR2 = 0x00;
  1811  021C  019A               	clrf	26	;volatile
  1812                           
  1813                           ;PIC_PWM.c: 9: T2CON |= ((uint8_t)pre_val<<0);
  1814  021D  0845               	movf	PWM_Init@pre_val,w
  1815  021E  00C7               	movwf	??_PWM_Init
  1816  021F  0847               	movf	??_PWM_Init,w
  1817  0220  049C               	iorwf	28,f	;volatile
  1818                           
  1819                           ;PIC_PWM.c: 10: T2CON |= (0x00<<3);
  1820  0221  081C               	movf	28,w	;volatile
  1821                           
  1822                           ;PIC_PWM.c: 11: T2CON |= (0x01<<2);
  1823  0222  151C               	bsf	28,2	;volatile
  1824                           
  1825                           ;PIC_PWM.c: 13: CCP1CON &= ~(3<<6);
  1826  0223  303F               	movlw	63
  1827  0224  00C7               	movwf	??_PWM_Init
  1828  0225  0847               	movf	??_PWM_Init,w
  1829  0226  0025               	movlb	5	; select bank5
  1830  0227  0593               	andwf	19,f	;volatile
  1831                           
  1832                           ;PIC_PWM.c: 15: CCPR1L = 0x00;
  1833  0228  0191               	clrf	17	;volatile
  1834  0229  0008               	return
  1835  022A                     __end_of_PWM_Init:	
  1836                           
  1837                           	psect	text8
  1838  022A                     __ptext8:	
  1839 ;; *************** function _PWM_Init_Port *****************
  1840 ;; Defined at:
  1841 ;;		line 88 in file "main.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;                  1    wreg      void 
  1848 ;; Registers used:
  1849 ;;		wreg, status,2, status,0
  1850 ;; Tracked objects:
  1851 ;;		On entry : 0/0
  1852 ;;		On exit  : 0/0
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1
  1855 ;;      Params:         0       0       0
  1856 ;;      Locals:         0       0       0
  1857 ;;      Temps:          0       1       0
  1858 ;;      Totals:         0       1       0
  1859 ;;Total ram usage:        1 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    2
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_main
  1866 ;;		_PWM_Init
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _PWM_Init_Port
  1872  022A                     _PWM_Init_Port:	
  1873                           
  1874                           ;main.c: 90: TRISA &= ~(1<<2);
  1875                           
  1876                           ;incstack = 0
  1877                           ; Regs used in _PWM_Init_Port: [wreg+status,2+status,0]
  1878  022A  30FB               	movlw	251
  1879  022B  0020               	movlb	0	; select bank0
  1880  022C  00C2               	movwf	??_PWM_Init_Port
  1881  022D  0842               	movf	??_PWM_Init_Port,w
  1882  022E  0021               	movlb	1	; select bank1
  1883  022F  058C               	andwf	12,f	;volatile
  1884                           
  1885                           ;main.c: 91: APFCON &= ~(1<<0);
  1886  0230  30FE               	movlw	254
  1887  0231  0020               	movlb	0	; select bank0
  1888  0232  00C2               	movwf	??_PWM_Init_Port
  1889  0233  0842               	movf	??_PWM_Init_Port,w
  1890  0234  0022               	movlb	2	; select bank2
  1891  0235  059D               	andwf	29,f	;volatile
  1892                           
  1893                           ;main.c: 92: ANSELA &= ~(1<<2);
  1894  0236  30FB               	movlw	251
  1895  0237  0020               	movlb	0	; select bank0
  1896  0238  00C2               	movwf	??_PWM_Init_Port
  1897  0239  0842               	movf	??_PWM_Init_Port,w
  1898  023A  0023               	movlb	3	; select bank3
  1899  023B  058C               	andwf	12,f	;volatile
  1900  023C  0008               	return
  1901  023D                     __end_of_PWM_Init_Port:	
  1902                           
  1903                           	psect	text9
  1904  026A                     __ptext9:	
  1905 ;; *************** function _Basic_Init *****************
  1906 ;; Defined at:
  1907 ;;		line 46 in file "main.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1
  1921 ;;      Params:         0       0       0
  1922 ;;      Locals:         0       0       0
  1923 ;;      Temps:          0       0       0
  1924 ;;      Totals:         0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    2
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _Basic_Init
  1937  026A                     _Basic_Init:	
  1938                           
  1939                           ;main.c: 48: OSCCON = 0xF0;
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _Basic_Init: [wreg+status,2]
  1943  026A  30F0               	movlw	240
  1944  026B  0021               	movlb	1	; select bank1
  1945  026C  0099               	movwf	25	;volatile
  1946                           
  1947                           ;main.c: 52: TRISA = 0x00;
  1948  026D  018C               	clrf	12	;volatile
  1949                           
  1950                           ;main.c: 53: ANSELA = 0x00;
  1951  026E  0023               	movlb	3	; select bank3
  1952  026F  018C               	clrf	12	;volatile
  1953                           
  1954                           ;main.c: 54: WPUA = 0x00;
  1955  0270  0024               	movlb	4	; select bank4
  1956  0271  018C               	clrf	12	;volatile
  1957                           
  1958                           ;main.c: 57: APFCON = 0x00;
  1959  0272  0022               	movlb	2	; select bank2
  1960  0273  019D               	clrf	29	;volatile
  1961                           
  1962                           ;main.c: 59: PORTA = 0x00;
  1963  0274  0020               	movlb	0	; select bank0
  1964  0275  018C               	clrf	12	;volatile
  1965  0276  0008               	return
  1966  0277                     __end_of_Basic_Init:	
  1967                           
  1968                           	psect	intentry
  1969  0004                     __pintentry:	
  1970 ;; *************** function _Handler *****************
  1971 ;; Defined at:
  1972 ;;		line 63 in file "main.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;		None
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;		None
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMMON   BANK0   BANK1
  1986 ;;      Params:         0       0       0
  1987 ;;      Locals:         0       0       0
  1988 ;;      Temps:          1       0       0
  1989 ;;      Totals:         1       0       0
  1990 ;;Total ram usage:        1 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    1
  1993 ;; This function calls:
  1994 ;;		_Timer0_CheckFlag
  1995 ;;		_UART_Interrupt
  1996 ;;		_mTouch_Count1ms
  1997 ;;		_mTouch_Scan
  1998 ;; This function is called by:
  1999 ;;		Interrupt level 1
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003  0004                     _Handler:	
  2004                           
  2005                           ;incstack = 0
  2006  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2007                           
  2008                           ; Regs used in _Handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2009  0005  3180               	pagesel	$
  2010  0006  0020               	movlb	0	; select bank0
  2011  0007  087F               	movf	127,w
  2012  0008  00F9               	movwf	??_Handler
  2013                           
  2014                           ;main.c: 65: static uint16_t Interval = 0;
  2015                           ;main.c: 67: if(Timer0_CheckFlag())
  2016  0009  2283               	fcall	_Timer0_CheckFlag
  2017  000A  3A00               	xorlw	0
  2018  000B  1903               	skipnz
  2019  000C  281D               	goto	i1l1213
  2020                           
  2021                           ;main.c: 68: {
  2022                           ;main.c: 69: mTouch_Count1ms();
  2023  000D  2172               	fcall	_mTouch_Count1ms
  2024                           
  2025                           ;main.c: 71: if(++Interval>30)
  2026  000E  3001               	movlw	1
  2027  000F  0020               	movlb	0	; select bank0
  2028  0010  07C0               	addwf	Handler@Interval,f
  2029  0011  3000               	movlw	0
  2030  0012  3DC1               	addwfc	Handler@Interval+1,f
  2031  0013  3000               	movlw	0
  2032  0014  0241               	subwf	Handler@Interval+1,w
  2033  0015  301F               	movlw	31
  2034  0016  1903               	skipnz
  2035  0017  0240               	subwf	Handler@Interval,w
  2036  0018  1C03               	skipc
  2037  0019  281D               	goto	i1l1213
  2038                           
  2039                           ;main.c: 72: {
  2040                           ;main.c: 73: Interval = 0;
  2041  001A  01C0               	clrf	Handler@Interval
  2042  001B  01C1               	clrf	Handler@Interval+1
  2043                           
  2044                           ;main.c: 74: mTouch_Scan();
  2045  001C  20AA               	fcall	_mTouch_Scan
  2046  001D                     i1l1213:	
  2047                           
  2048                           ;main.c: 75: }
  2049                           ;main.c: 76: }
  2050                           ;main.c: 77: UART_Interrupt();
  2051  001D  21EC               	fcall	_UART_Interrupt
  2052  001E  0879               	movf	??_Handler,w
  2053  001F  0020               	movlb	0	; select bank0
  2054  0020  00FF               	movwf	127
  2055  0021  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2056  0022  0009               	retfie
  2057  0023                     __end_of_Handler:	
  2058                           
  2059                           	psect	text11
  2060  00AA                     __ptext11:	
  2061 ;; *************** function _mTouch_Scan *****************
  2062 ;; Defined at:
  2063 ;;		line 33 in file "PIC_mTouch.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1
  2077 ;;      Params:         0       0       0
  2078 ;;      Locals:         0       0       0
  2079 ;;      Temps:          4       0       0
  2080 ;;      Totals:         4       0       0
  2081 ;;Total ram usage:        4 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_Handler
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           
  2091                           ;psect for function _mTouch_Scan
  2092  00AA                     _mTouch_Scan:	
  2093                           
  2094                           ;PIC_mTouch.c: 35: static uint8_t elements = 0;
  2095                           ;PIC_mTouch.c: 37: config_ptr[elements].CPS_PreData = config_ptr[elements].CPS_Data;
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _mTouch_Scan: [wreg-fsr1h+status,2+status,0]
  2099  00AA  0870               	movf	mTouch_Scan@elements,w
  2100  00AB  00F5               	movwf	??_mTouch_Scan
  2101  00AC  3002               	movlw	2
  2102  00AD                     u51_25:	
  2103  00AD  35F5               	lslf	??_mTouch_Scan,f
  2104  00AE  3EFF               	addlw	-1
  2105  00AF  1D03               	skipz
  2106  00B0  28AD               	goto	u51_25
  2107  00B1  3575               	lslf	??_mTouch_Scan,w
  2108  00B2  0772               	addwf	_config_ptr,w
  2109  00B3  00F6               	movwf	??_mTouch_Scan+1
  2110  00B4  0876               	movf	??_mTouch_Scan+1,w
  2111  00B5  3E03               	addlw	3
  2112  00B6  0086               	movwf	6
  2113  00B7  0187               	clrf	7
  2114  00B8  0870               	movf	mTouch_Scan@elements,w
  2115  00B9  00F7               	movwf	??_mTouch_Scan+2
  2116  00BA  3002               	movlw	2
  2117  00BB                     u52_25:	
  2118  00BB  35F7               	lslf	??_mTouch_Scan+2,f
  2119  00BC  3EFF               	addlw	-1
  2120  00BD  1D03               	skipz
  2121  00BE  28BB               	goto	u52_25
  2122  00BF  3577               	lslf	??_mTouch_Scan+2,w
  2123  00C0  0772               	addwf	_config_ptr,w
  2124  00C1  00F8               	movwf	??_mTouch_Scan+3
  2125  00C2  0878               	movf	??_mTouch_Scan+3,w
  2126  00C3  3E05               	addlw	5
  2127  00C4  0084               	movwf	4
  2128  00C5  0185               	clrf	5
  2129  00C6  3F40               	moviw [0]fsr1
  2130  00C7  3F80               	movwi [0]fsr0
  2131  00C8  3F41               	moviw [1]fsr1
  2132  00C9  3F81               	movwi [1]fsr0
  2133                           
  2134                           ;PIC_mTouch.c: 39: CPSCON0 &= ~(0x01<<7);;
  2135  00CA  307F               	movlw	127
  2136  00CB  00F5               	movwf	??_mTouch_Scan
  2137  00CC  0875               	movf	??_mTouch_Scan,w
  2138  00CD  0020               	movlb	0	; select bank0
  2139  00CE  059E               	andwf	30,f	;volatile
  2140                           
  2141                           ;PIC_mTouch.c: 41: config_ptr[elements].CPS_Data = TMR1;
  2142  00CF  0870               	movf	mTouch_Scan@elements,w
  2143  00D0  00F5               	movwf	??_mTouch_Scan
  2144  00D1  3002               	movlw	2
  2145  00D2                     u53_25:	
  2146  00D2  35F5               	lslf	??_mTouch_Scan,f
  2147  00D3  3EFF               	addlw	-1
  2148  00D4  1D03               	skipz
  2149  00D5  28D2               	goto	u53_25
  2150  00D6  3575               	lslf	??_mTouch_Scan,w
  2151  00D7  0772               	addwf	_config_ptr,w
  2152  00D8  00F6               	movwf	??_mTouch_Scan+1
  2153  00D9  0876               	movf	??_mTouch_Scan+1,w
  2154  00DA  3E03               	addlw	3
  2155  00DB  0086               	movwf	6
  2156  00DC  0187               	clrf	7
  2157  00DD  0816               	movf	22,w	;volatile
  2158  00DE  3FC0               	movwi [0]fsr1
  2159  00DF  0817               	movf	23,w	;volatile
  2160  00E0  3FC1               	movwi [1]fsr1
  2161                           
  2162                           ;PIC_mTouch.c: 42: TMR1 = 0x0000;
  2163  00E1  0196               	clrf	22	;volatile
  2164  00E2  0197               	clrf	23	;volatile
  2165                           
  2166                           ;PIC_mTouch.c: 44: CPSCON0 |= (0x01<<7);;
  2167  00E3  179E               	bsf	30,7	;volatile
  2168                           
  2169                           ;PIC_mTouch.c: 46: if(++elements>=using_channel)elements = 0;
  2170  00E4  3001               	movlw	1
  2171  00E5  00F5               	movwf	??_mTouch_Scan
  2172  00E6  0875               	movf	??_mTouch_Scan,w
  2173  00E7  07F0               	addwf	mTouch_Scan@elements,f
  2174  00E8  0871               	movf	_using_channel,w
  2175  00E9  0270               	subwf	mTouch_Scan@elements,w
  2176  00EA  1803               	btfsc	3,0
  2177  00EB  01F0               	clrf	mTouch_Scan@elements
  2178                           
  2179                           ;PIC_mTouch.c: 48: CPSCON1 = (uint8_t)config_ptr[elements].CPS_Channel;
  2180  00EC  0870               	movf	mTouch_Scan@elements,w
  2181  00ED  00F5               	movwf	??_mTouch_Scan
  2182  00EE  3002               	movlw	2
  2183  00EF                     u55_25:	
  2184  00EF  35F5               	lslf	??_mTouch_Scan,f
  2185  00F0  3EFF               	addlw	-1
  2186  00F1  1D03               	skipz
  2187  00F2  28EF               	goto	u55_25
  2188  00F3  3575               	lslf	??_mTouch_Scan,w
  2189  00F4  0772               	addwf	_config_ptr,w
  2190  00F5  00F6               	movwf	??_mTouch_Scan+1
  2191  00F6  0876               	movf	??_mTouch_Scan+1,w
  2192  00F7  0086               	movwf	6
  2193  00F8  0187               	clrf	7
  2194  00F9  0801               	movf	1,w
  2195  00FA  009F               	movwf	31	;volatile
  2196  00FB  0008               	return
  2197  00FC                     __end_of_mTouch_Scan:	
  2198                           
  2199                           	psect	text12
  2200  0172                     __ptext12:	
  2201 ;; *************** function _mTouch_Count1ms *****************
  2202 ;; Defined at:
  2203 ;;		line 51 in file "PIC_mTouch.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  elements        1    2[COMMON] unsigned char 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1
  2217 ;;      Params:         0       0       0
  2218 ;;      Locals:         1       0       0
  2219 ;;      Temps:          2       0       0
  2220 ;;      Totals:         3       0       0
  2221 ;;Total ram usage:        3 bytes
  2222 ;; Hardware stack levels used:    1
  2223 ;; This function calls:
  2224 ;;		Nothing
  2225 ;; This function is called by:
  2226 ;;		_Handler
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           
  2231                           ;psect for function _mTouch_Count1ms
  2232  0172                     _mTouch_Count1ms:	
  2233                           
  2234                           ;PIC_mTouch.c: 53: for(uint8_t elements=0;elements<using_channel;elements++)
  2235                           
  2236                           ;incstack = 0
  2237                           ; Regs used in _mTouch_Count1ms: [wreg+fsr1l+fsr1h+status,2+status,0]
  2238  0172  01F7               	clrf	mTouch_Count1ms@elements
  2239  0173                     i1l1151:	
  2240  0173  0871               	movf	_using_channel,w
  2241  0174  0277               	subwf	mTouch_Count1ms@elements,w
  2242  0175  1803               	btfsc	3,0
  2243  0176  0008               	return
  2244                           
  2245                           ;PIC_mTouch.c: 54: {
  2246                           ;PIC_mTouch.c: 55: if(config_ptr[elements].Check_Interval)
  2247  0177  0877               	movf	mTouch_Count1ms@elements,w
  2248  0178  00F5               	movwf	??_mTouch_Count1ms
  2249  0179  3002               	movlw	2
  2250  017A                     u47_25:	
  2251  017A  35F5               	lslf	??_mTouch_Count1ms,f
  2252  017B  3EFF               	addlw	-1
  2253  017C  1D03               	skipz
  2254  017D  297A               	goto	u47_25
  2255  017E  3575               	lslf	??_mTouch_Count1ms,w
  2256  017F  0772               	addwf	_config_ptr,w
  2257  0180  00F6               	movwf	??_mTouch_Count1ms+1
  2258  0181  0876               	movf	??_mTouch_Count1ms+1,w
  2259  0182  3E07               	addlw	7
  2260  0183  0086               	movwf	6
  2261  0184  0187               	clrf	7
  2262  0185  0801               	movf	1,w
  2263  0186  1903               	btfsc	3,2
  2264  0187  2998               	goto	i1l1149
  2265                           
  2266                           ;PIC_mTouch.c: 56: config_ptr[elements].Check_Interval--;
  2267  0188  0877               	movf	mTouch_Count1ms@elements,w
  2268  0189  00F5               	movwf	??_mTouch_Count1ms
  2269  018A  3002               	movlw	2
  2270  018B                     u49_25:	
  2271  018B  35F5               	lslf	??_mTouch_Count1ms,f
  2272  018C  3EFF               	addlw	-1
  2273  018D  1D03               	skipz
  2274  018E  298B               	goto	u49_25
  2275  018F  3575               	lslf	??_mTouch_Count1ms,w
  2276  0190  0772               	addwf	_config_ptr,w
  2277  0191  00F6               	movwf	??_mTouch_Count1ms+1
  2278  0192  0876               	movf	??_mTouch_Count1ms+1,w
  2279  0193  3E07               	addlw	7
  2280  0194  0086               	movwf	6
  2281  0195  0187               	clrf	7
  2282  0196  3001               	movlw	1
  2283  0197  0281               	subwf	1,f
  2284  0198                     i1l1149:	
  2285  0198  3001               	movlw	1
  2286  0199  00F5               	movwf	??_mTouch_Count1ms
  2287  019A  0875               	movf	??_mTouch_Count1ms,w
  2288  019B  07F7               	addwf	mTouch_Count1ms@elements,f
  2289  019C  2973               	goto	i1l1151
  2290  019D                     __end_of_mTouch_Count1ms:	
  2291                           
  2292                           	psect	text13
  2293  01EC                     __ptext13:	
  2294 ;; *************** function _UART_Interrupt *****************
  2295 ;; Defined at:
  2296 ;;		line 107 in file "PIC_UART.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  x               1    2[COMMON] unsigned char 
  2301 ;;  dt              1    1[COMMON] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1
  2311 ;;      Params:         0       0       0
  2312 ;;      Locals:         2       0       0
  2313 ;;      Temps:          1       0       0
  2314 ;;      Totals:         3       0       0
  2315 ;;Total ram usage:        3 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_Handler
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function _UART_Interrupt
  2326  01EC                     _UART_Interrupt:	
  2327                           
  2328                           ;PIC_UART.c: 109: uint8_t x;
  2329                           ;PIC_UART.c: 110: uint8_t dt;
  2330                           ;PIC_UART.c: 112: if (RCIF == 1)
  2331                           
  2332                           ;incstack = 0
  2333                           ; Regs used in _UART_Interrupt: [wreg+fsr1l+fsr1h+status,2+status,0]
  2334  01EC  0020               	movlb	0	; select bank0
  2335  01ED  1E91               	btfss	17,5	;volatile
  2336  01EE  0008               	return
  2337                           
  2338                           ;PIC_UART.c: 113: {
  2339                           ;PIC_UART.c: 114: dt = RCREG;
  2340  01EF  0023               	movlb	3	; select bank3
  2341  01F0  0819               	movf	25,w	;volatile
  2342  01F1  00F5               	movwf	??_UART_Interrupt
  2343  01F2  0875               	movf	??_UART_Interrupt,w
  2344  01F3  00F6               	movwf	UART_Interrupt@dt
  2345                           
  2346                           ;PIC_UART.c: 115: x = (UART_Buffer_outptr + 1) % 32;
  2347  01F4  0873               	movf	_UART_Buffer_outptr,w
  2348  01F5  3E01               	addlw	1
  2349  01F6  391F               	andlw	31
  2350  01F7  00F5               	movwf	??_UART_Interrupt
  2351  01F8  0875               	movf	??_UART_Interrupt,w
  2352  01F9  00F7               	movwf	UART_Interrupt@x
  2353                           
  2354                           ;PIC_UART.c: 116: if (x != UART_Buffer_inptr)
  2355  01FA  0877               	movf	UART_Interrupt@x,w
  2356  01FB  0674               	xorwf	_UART_Buffer_inptr,w
  2357  01FC  1903               	skipnz
  2358  01FD  2A0A               	goto	i1l1181
  2359                           
  2360                           ;PIC_UART.c: 117: {
  2361                           ;PIC_UART.c: 118: UART_Buffer[UART_Buffer_outptr] = dt;
  2362  01FE  0876               	movf	UART_Interrupt@dt,w
  2363  01FF  00F5               	movwf	??_UART_Interrupt
  2364  0200  0873               	movf	_UART_Buffer_outptr,w
  2365  0201  3E20               	addlw	(low (_UART_Buffer| 0))& (0+255)
  2366  0202  0086               	movwf	6
  2367  0203  0187               	clrf	7
  2368  0204  0875               	movf	??_UART_Interrupt,w
  2369  0205  0081               	movwf	1
  2370                           
  2371                           ;PIC_UART.c: 119: UART_Buffer_outptr = x;
  2372  0206  0877               	movf	UART_Interrupt@x,w
  2373  0207  00F5               	movwf	??_UART_Interrupt
  2374  0208  0875               	movf	??_UART_Interrupt,w
  2375  0209  00F3               	movwf	_UART_Buffer_outptr
  2376  020A                     i1l1181:	
  2377                           
  2378                           ;PIC_UART.c: 120: }
  2379                           ;PIC_UART.c: 122: if (OERR == 1)
  2380  020A  1C9D               	btfss	29,1	;volatile
  2381  020B  2A10               	goto	i1l168
  2382                           
  2383                           ;PIC_UART.c: 123: {
  2384                           ;PIC_UART.c: 124: CREN = 0;
  2385  020C  121D               	bcf	29,4	;volatile
  2386  020D                     i1l169:	
  2387                           ;PIC_UART.c: 125: while (OERR);
  2388                           
  2389  020D  189D               	btfsc	29,1	;volatile
  2390  020E  2A0D               	goto	i1l169
  2391                           
  2392                           ;PIC_UART.c: 126: CREN = 1;
  2393  020F  161D               	bsf	29,4	;volatile
  2394  0210                     i1l168:	
  2395                           
  2396                           ;PIC_UART.c: 127: }
  2397                           ;PIC_UART.c: 128: RCIF = 0;
  2398  0210  0020               	movlb	0	; select bank0
  2399  0211  1291               	bcf	17,5	;volatile
  2400  0212  0008               	return
  2401  0213                     __end_of_UART_Interrupt:	
  2402                           
  2403                           	psect	text14
  2404  0283                     __ptext14:	
  2405 ;; *************** function _Timer0_CheckFlag *****************
  2406 ;; Defined at:
  2407 ;;		line 21 in file "PIC_Timer0.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;		None
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;		None
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  1    wreg      unsigned char 
  2414 ;; Registers used:
  2415 ;;		wreg
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1
  2421 ;;      Params:         0       0       0
  2422 ;;      Locals:         0       0       0
  2423 ;;      Temps:          0       0       0
  2424 ;;      Totals:         0       0       0
  2425 ;;Total ram usage:        0 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_Handler
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           
  2435                           ;psect for function _Timer0_CheckFlag
  2436  0283                     _Timer0_CheckFlag:	
  2437                           
  2438                           ;PIC_Timer0.c: 23: if(TMR0IE&&TMR0IF)
  2439                           
  2440                           ;incstack = 0
  2441                           ; Regs used in _Timer0_CheckFlag: [wreg]
  2442  0283  1A8B               	btfsc	11,5	;volatile
  2443  0284  1D0B               	btfss	11,2	;volatile
  2444  0285  2A8C               	goto	i1l1139
  2445                           
  2446                           ;PIC_Timer0.c: 24: {
  2447                           ;PIC_Timer0.c: 25: TMR0 = TMR0_ReloadTemp;
  2448  0286  0020               	movlb	0	; select bank0
  2449  0287  0854               	movf	_TMR0_ReloadTemp,w
  2450  0288  0095               	movwf	21	;volatile
  2451                           
  2452                           ;PIC_Timer0.c: 26: TMR0IF = 0;
  2453  0289  110B               	bcf	11,2	;volatile
  2454                           
  2455                           ;PIC_Timer0.c: 27: return 1;
  2456  028A  3001               	movlw	1
  2457  028B  0008               	return
  2458  028C                     i1l1139:	
  2459                           
  2460                           ;PIC_Timer0.c: 28: }
  2461                           ;PIC_Timer0.c: 29: return 0;
  2462  028C  3000               	movlw	0
  2463  028D  0008               	return
  2464  028E                     __end_of_Timer0_CheckFlag:	
  2465  007E                     btemp	set	126	;btemp
  2466  007E                     int$flags	set	126
  2467  007E                     wtemp0	set	126


Data Sizes:
    Strings     28
    Constant    26
    Data        0
    BSS         39
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     18      53
    BANK1            32      0       0

Pointer List with Targets:

    mTouch_Init@cps_config	PTR struct . size(1) Largest target is 8
		 -> main@cps_conf(BANK0[8]), 

    config_ptr	PTR struct . size(1) Largest target is 8
		 -> NULL(NULL[0]), main@cps_conf(BANK0[8]), 

    mTouch_Init@mTouch_PortInit	PTR FTN()void  size(2) Largest target is 1
		 -> mTouch_Init_Port(), 

    PWM_Init@PMW_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> PWM_Init_Port(), 

    UART_Init@UART_Init_PORT	PTR FTN()void  size(2) Largest target is 1
		 -> UART_Init_Port(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _Handler in COMMON

    _Handler->_mTouch_Scan

Critical Paths under _main in BANK0

    _main->_mTouch_Check
    _UART_Init->_UART_Init_Port
    _PWM_Init->_PWM_Init_Port

Critical Paths under _Handler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Handler in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1271
                                              9 BANK0      9     9      0
                         _Basic_Init
                           _PWM_Init
                        _Timer0_Init
                          _UART_Init
                       _mTouch_Check
                        _mTouch_Init
 ---------------------------------------------------------------------------------
 (1) _mTouch_Init                                          5     1      4     288
                                              0 BANK0      5     1      4
                   _mTouch_Init_Port *
 ---------------------------------------------------------------------------------
 (2) _mTouch_Init_Port                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mTouch_Check                                         9     9      0     220
                                              0 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            7     4      3     223
                                              1 BANK0      7     4      3
                     _UART_Init_Port *
 ---------------------------------------------------------------------------------
 (2) _UART_Init_Port                                       1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          3     2      1     127
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             5     1      4     288
                                              1 BANK0      5     1      4
                      _PWM_Init_Port *
 ---------------------------------------------------------------------------------
 (2) _PWM_Init_Port                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Basic_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Handler                                              1     1      0     136
                                              4 COMMON     1     1      0
                   _Timer0_CheckFlag
                     _UART_Interrupt
                    _mTouch_Count1ms
                        _mTouch_Scan
 ---------------------------------------------------------------------------------
 (4) _mTouch_Scan                                          4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (4) _mTouch_Count1ms                                      3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _UART_Interrupt                                       3     3      0      68
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _Timer0_CheckFlag                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Basic_Init
   _PWM_Init
     _PWM_Init_Port *
   _Timer0_Init
   _UART_Init
     _UART_Init_Port *
   _mTouch_Check
   _mTouch_Init
     _mTouch_Init_Port *

 _Handler (ROOT)
   _Timer0_CheckFlag
   _UART_Interrupt
   _mTouch_Count1ms
   _mTouch_Scan

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     12      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      3F       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Sep  5 13:39:27 2017

               __CFG_CP$OFF 0000                         _GIE 005F                         _PR2 001B  
              __CFG_CPD$OFF 0000                __CFG_BORV$LO 0000                         wreg 0009  
                _Basic_Init 026A                __CFG_LVP$OFF 0000                        l1501 003A  
                      l1513 00A8                        l1529 0131                        STR_1 0277  
                      STR_2 025C                        STR_3 02A3                        _CREN 0CEC  
                      u1105 0086                        u1125 0099                        u1065 003D  
                      u1075 004B                        u1085 0068                        u1095 0080  
                      _PEIE 005E                        _RCIE 048D                        _RCIF 008D  
                      _OERR 0CE9                        _TMR0 0015                        _TMR1 0016  
                      _TMR2 001A                        _SPEN 0CEF                        _TXIF 008C  
                      _WPUA 020C                __CFG_WRT$OFF 0000       mTouch_Init@cps_config 0044  
                      _main 00FC                        fsr0h 0005                        fsr1h 0007  
                      indf0 0000                        fsr0l 0004                        indf1 0001  
                      fsr1l 0006                        btemp 007E                        start 0023  
             __CFG_IESO$OFF 0000             __end_of_Handler 0023               __CFG_MCLRE$ON 0000  
      mTouch_Check@elements 004A   mTouch_Init@num_of_channel 0045               __CFG_PLLEN$ON 0000  
              main@cps_conf 004C                       ?_main 0075                       _BRG16 0CFB  
             __CFG_WDTE$OFF 0000                       _T1CON 0018                       _T2CON 001C  
                     _LATA5 0865                       i1l168 0210                       i1l169 020D  
                     _RCREG 0199                       _RCSTA 019D                       _PORTA 000C  
                     u51_25 00AD                       u52_25 00BB                       u53_25 00D2  
                     u47_25 017A                       u55_25 00EF                       _TRISA 008C  
                     u49_25 018B                       _TXREG 019A                       _TXSTA 019E  
            __CFG_FCMEN$OFF 0000               _PWM_Init_Port 022A          __size_of_UART_Init 0039  
         _UART_Buffer_inptr 0074             __end_of_dpowers 0298              __CFG_BOREN$OFF 0000  
                     pclath 000A            __end_of_PWM_Init 022A                       status 0003  
                     wtemp0 007E             __initialization 0024                __end_of_main 0139  
 __size_of_mTouch_Init_Port 0005                      ??_main 004B           ?_Timer0_CheckFlag 0075  
      __end_of_mTouch_Check 00AA          ??_Timer0_CheckFlag 0075              ?_PWM_Init_Port 0075  
               ?_Basic_Init 0075             _mTouch_Count1ms 0172        __size_of_mTouch_Init 0028  
      __size_of_mTouch_Scan 0052                      _CCPR1L 0291                      _APFCON 011D  
                    _ANSELA 018C                      _T1GCON 0019                      i1l1213 001D  
                    i1l1151 0173                      i1l1139 028C                      i1l1181 020A  
                    i1l1149 0198                      _OSCCON 0099                      _TMR0IE 005D  
                    _TMR0IF 005A                   ??_Handler 0079                      _SPBRGH 019C  
                    _SPBRGL 019B               ??_Timer0_Init 0043              __CFG_PWRTE$OFF 0000  
         __end_of_UART_Init 0172          Timer0_Init@pre_val 0044     __size_of_UART_Init_Port 000F  
        _UART_Buffer_outptr 0073     __size_of_UART_Interrupt 0027     UART_Init@UART_Init_PORT 0043  
             _using_channel 0071     __end_of__initialization 002F              __pcstackCOMMON 0075  
       __size_of_Basic_Init 000D         __end_of_Timer0_Init 01EC     __end_of_mTouch_Count1ms 019D  
                 ?_PWM_Init 0043             ??_PWM_Init_Port 0042                  __pbssBANK0 0020  
   mTouch_Count1ms@elements 0077                  __pmaintext 00FC                  __pintentry 0004  
     __size_of_mTouch_Check 0078                     _CCP1CON 0293            _mTouch_Init_Port 029E  
                ??_PWM_Init 0047                     _CPSCON0 001E                     _CPSCON1 001F  
                _config_ptr 0072           __end_of_baudtable 024D                     _Handler 0004  
              _mTouch_Check 0032                 _Timer0_Init 01C5              _UART_Init_Port 024D  
           __CFG_STVREN$OFF 0000                     __ptext1 019D                     __ptext2 029E  
                   __ptext3 0032                     __ptext4 0139                     __ptext5 024D  
                   __ptext6 01C5                     __ptext7 0213                     __ptext8 022A  
                   __ptext9 026A            ?_mTouch_Count1ms 0075              _UART_Interrupt 01EC  
                   _dpowers 028E                ??_Basic_Init 0042                     clrloop0 0299  
      end_of_initialization 002F   __size_of_Timer0_CheckFlag 000B      __end_of_UART_Init_Port 025C  
        __end_of_Basic_Init 0277      __end_of_UART_Interrupt 0213                   _UART_Init 0139  
          __CFG_FOSC$INTOSC 0000               ??_mTouch_Init 0046               ??_mTouch_Scan 0075  
           ?_UART_Init_Port 0075            UART_Interrupt@dt 0076             ?_UART_Interrupt 0075  
                ?_UART_Init 0043           __size_of_PWM_Init 0017         start_initialization 0024  
       __end_of_mTouch_Init 01C5         __end_of_mTouch_Scan 00FC    __end_of_mTouch_Init_Port 02A3  
     Timer0_Init@reload_val 0042       __end_of_PWM_Init_Port 023D                 __pbssCOMMON 0070  
                 ___latbits 0000               __pcstackBANK0 0042            _Timer0_CheckFlag 0283  
                  ?_Handler 0075                   _baudtable 023D                   __pnvBANK0 0054  
              ?_Timer0_Init 0042  mTouch_Init@mTouch_PortInit 0042                 ??_UART_Init 0046  
               _mTouch_Init 019D                 _mTouch_Scan 00AA                   clear_ram0 0298  
                  _PWM_Init 0213             UART_Interrupt@x 0077    __size_of_mTouch_Count1ms 002B  
          ??_UART_Init_Port 0042            __size_of_Handler 001F            ??_UART_Interrupt 0075  
              UART_Init@brg 0045                    __ptext11 00AA                    __ptext12 0172  
                  __ptext13 01EC                    __ptext14 0283             PWM_Init@pre_val 0045  
         ?_mTouch_Init_Port 0075               __size_of_main 003D       PWM_Init@PMW_Init_PORT 0043  
        ??_mTouch_Init_Port 0042        __size_of_Timer0_Init 0027                    int$flags 007E  
       mTouch_Scan@elements 0070    __end_of_Timer0_CheckFlag 028E                    intlevel1 0000  
            PWM_Init@period 0046           __CFG_CLKOUTEN$OFF 0000                 _UART_Buffer 0020  
         ??_mTouch_Count1ms 0075               ?_mTouch_Check 0075             Handler@Interval 0040  
             __pstringtext1 023D               __pstringtext2 028E               __pstringtext3 025C  
             __pstringtext4 0277               __pstringtext5 02A3               __pstringtext6 0000  
                _OPTION_REG 0095                ?_mTouch_Init 0042                ?_mTouch_Scan 0075  
            ??_mTouch_Check 0042     mTouch_Check@DifferValue 0048             _TMR0_ReloadTemp 0054  
    __size_of_PWM_Init_Port 0013  
